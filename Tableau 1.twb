<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.22.1117.1841                               -->
<workbook original-version='18.1' source-build='2022.4.0 (20224.22.1117.1841)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Countries+' inline='true' name='federated.12td1wm1ky720e15qfll51yxxrrc' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Countries' name='textscan.1uiipxa1d09nig113mie21hk8bmc'>
            <connection class='textscan' directory='C:/Users/user/Downloads' filename='Countries.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1uiipxa1d09nig113mie21hk8bmc' name='Cities.csv' table='[Cities#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='city' ordinal='0' />
            <column datatype='string' name='country' ordinal='1' />
            <column datatype='real' name='latitude' ordinal='2' />
            <column datatype='real' name='longitude' ordinal='3' />
            <column datatype='real' name='temperature' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.1uiipxa1d09nig113mie21hk8bmc' name='Countries.csv' table='[Countries#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Country' ordinal='0' />
              <column datatype='integer' name='National Fugitives' ordinal='1' />
              <column datatype='integer' name='Wanted Fugitives' ordinal='2' />
              <column datatype='integer' name='Possible Hosted Fugitives / Captured Fugitives' ordinal='3' />
              <column datatype='string' name='Region' ordinal='4' />
              <column datatype='string' name='Flag' ordinal='5' />
            </columns>
          </relation>
          <relation connection='textscan.1uiipxa1d09nig113mie21hk8bmc' name='Cities.csv' table='[Cities#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='city' ordinal='0' />
              <column datatype='string' name='country' ordinal='1' />
              <column datatype='real' name='latitude' ordinal='2' />
              <column datatype='real' name='longitude' ordinal='3' />
              <column datatype='real' name='temperature' ordinal='4' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Countries.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Cities.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Countries.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries.csv_EED8654E64E5484D81E8A051DB934F02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>National Fugitives</remote-name>
            <remote-type>20</remote-type>
            <local-name>[National Fugitives]</local-name>
            <parent-name>[Countries.csv]</parent-name>
            <remote-alias>National Fugitives</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries.csv_EED8654E64E5484D81E8A051DB934F02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wanted Fugitives</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Wanted Fugitives]</local-name>
            <parent-name>[Countries.csv]</parent-name>
            <remote-alias>Wanted Fugitives</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries.csv_EED8654E64E5484D81E8A051DB934F02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Possible Hosted Fugitives / Captured Fugitives</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Possible Hosted Fugitives / Captured Fugitives]</local-name>
            <parent-name>[Countries.csv]</parent-name>
            <remote-alias>Possible Hosted Fugitives / Captured Fugitives</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries.csv_EED8654E64E5484D81E8A051DB934F02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Countries.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries.csv_EED8654E64E5484D81E8A051DB934F02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Flag</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Flag]</local-name>
            <parent-name>[Countries.csv]</parent-name>
            <remote-alias>Flag</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Countries.csv_EED8654E64E5484D81E8A051DB934F02]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[Cities.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cities.csv_D5D4E81969854C7B9243E926848FA7EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[Cities.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cities.csv_D5D4E81969854C7B9243E926848FA7EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[Cities.csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cities.csv_D5D4E81969854C7B9243E926848FA7EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[Cities.csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cities.csv_D5D4E81969854C7B9243E926848FA7EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temperature]</local-name>
            <parent-name>[Cities.csv]</parent-name>
            <remote-alias>temperature</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cities.csv_D5D4E81969854C7B9243E926848FA7EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Cities.csv' datatype='table' name='[__tableau_internal_object_id__].[Cities.csv_D5D4E81969854C7B9243E926848FA7EC]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Countries.csv' datatype='table' name='[__tableau_internal_object_id__].[Countries.csv_EED8654E64E5484D81E8A051DB934F02]' role='measure' type='quantitative' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Country1' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Temperature' datatype='real' name='[temperature]' role='measure' type='quantitative' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Europe, Asia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Southern Africa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Northern Africa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sub Saharan Africa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Central America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Cities.csv' id='Cities.csv_D5D4E81969854C7B9243E926848FA7EC'>
            <properties context=''>
              <relation connection='textscan.1uiipxa1d09nig113mie21hk8bmc' name='Cities.csv' table='[Cities#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='city' ordinal='0' />
                  <column datatype='string' name='country' ordinal='1' />
                  <column datatype='real' name='latitude' ordinal='2' />
                  <column datatype='real' name='longitude' ordinal='3' />
                  <column datatype='real' name='temperature' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Countries.csv' id='Countries.csv_EED8654E64E5484D81E8A051DB934F02'>
            <properties context=''>
              <relation connection='textscan.1uiipxa1d09nig113mie21hk8bmc' name='Countries.csv' table='[Countries#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='integer' name='National Fugitives' ordinal='1' />
                  <column datatype='integer' name='Wanted Fugitives' ordinal='2' />
                  <column datatype='integer' name='Possible Hosted Fugitives / Captured Fugitives' ordinal='3' />
                  <column datatype='string' name='Region' ordinal='4' />
                  <column datatype='string' name='Flag' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Country]' />
              <expression op='[country]' />
            </expression>
            <first-end-point object-id='Countries.csv_EED8654E64E5484D81E8A051DB934F02' />
            <second-end-point object-id='Cities.csv_D5D4E81969854C7B9243E926848FA7EC' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Cities (1)' inline='true' name='federated.1aovfx11mjcvab1dstyoe11ert8y' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Cities (1)' name='textscan.18xjd1q0sk83t218kzb531e7v93d'>
            <connection class='textscan' directory='C:/Users/user/Downloads' filename='Cities (1).csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.18xjd1q0sk83t218kzb531e7v93d' name='Cities (1).csv' table='[Cities (1)#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='city' ordinal='0' />
            <column datatype='string' name='country' ordinal='1' />
            <column datatype='real' name='latitude' ordinal='2' />
            <column datatype='real' name='longitude' ordinal='3' />
            <column datatype='real' name='temperature' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.18xjd1q0sk83t218kzb531e7v93d' name='Cities (1).csv' table='[Cities (1)#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='city' ordinal='0' />
            <column datatype='string' name='country' ordinal='1' />
            <column datatype='real' name='latitude' ordinal='2' />
            <column datatype='real' name='longitude' ordinal='3' />
            <column datatype='real' name='temperature' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Cities (1).csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[Cities (1).csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cities (1).csv_7C0743F0EB8A4DE2A48B1427AAC255EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[Cities (1).csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cities (1).csv_7C0743F0EB8A4DE2A48B1427AAC255EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[Cities (1).csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cities (1).csv_7C0743F0EB8A4DE2A48B1427AAC255EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[Cities (1).csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cities (1).csv_7C0743F0EB8A4DE2A48B1427AAC255EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temperature]</local-name>
            <parent-name>[Cities (1).csv]</parent-name>
            <remote-alias>temperature</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Cities (1).csv_7C0743F0EB8A4DE2A48B1427AAC255EA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Cities (1).csv' datatype='table' name='[__tableau_internal_object_id__].[Cities (1).csv_7C0743F0EB8A4DE2A48B1427AAC255EA]' role='measure' type='quantitative' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Temperature' datatype='real' name='[temperature]' role='measure' type='quantitative' />
      <drill-paths>
        <drill-path name='country, city'>
          <field>[country]</field>
          <field>[city]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Cities (1).csv' id='Cities (1).csv_7C0743F0EB8A4DE2A48B1427AAC255EA'>
            <properties context=''>
              <relation connection='textscan.18xjd1q0sk83t218kzb531e7v93d' name='Cities (1).csv' table='[Cities (1)#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='city' ordinal='0' />
                  <column datatype='string' name='country' ordinal='1' />
                  <column datatype='real' name='latitude' ordinal='2' />
                  <column datatype='real' name='longitude' ordinal='3' />
                  <column datatype='real' name='temperature' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Hottest Countries in EU with a coastline</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Countries+' name='federated.12td1wm1ky720e15qfll51yxxrrc' />
            <datasource caption='Cities (1)' name='federated.1aovfx11mjcvab1dstyoe11ert8y' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.12td1wm1ky720e15qfll51yxxrrc'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[temperature]' derivation='Sum' name='[sum:temperature:qk]' pivot='key' type='quantitative' />
            <column caption='Temperature' datatype='real' name='[temperature]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1aovfx11mjcvab1dstyoe11ert8y'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12td1wm1ky720e15qfll51yxxrrc].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;Europe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12td1wm1ky720e15qfll51yxxrrc].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.12td1wm1ky720e15qfll51yxxrrc].[Longitude (generated)]' field-type='quantitative' max='7860996.6063651945' min='-2565926.2483157981' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.12td1wm1ky720e15qfll51yxxrrc].[Latitude (generated)]' field-type='quantitative' max='8130359.7375551835' min='3789355.2016789271' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='subtotal' field='[federated.12td1wm1ky720e15qfll51yxxrrc].[none:Region:nk]' value='#f9a655' />
            <format attr='background-color' field='[federated.12td1wm1ky720e15qfll51yxxrrc].[none:Region:nk]' value='#ffffff' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.12td1wm1ky720e15qfll51yxxrrc].[none:Country:nk]' />
              <color column='[federated.12td1wm1ky720e15qfll51yxxrrc].[sum:temperature:qk]' />
              <geometry column='[federated.12td1wm1ky720e15qfll51yxxrrc].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.12td1wm1ky720e15qfll51yxxrrc].[none:Region:nk] * [federated.12td1wm1ky720e15qfll51yxxrrc].[Latitude (generated)])</rows>
        <cols>[federated.12td1wm1ky720e15qfll51yxxrrc].[Longitude (generated)]</cols>
        <join-lod-exclude-overrides>
          <column>[federated.1aovfx11mjcvab1dstyoe11ert8y].[country]</column>
        </join-lod-exclude-overrides>
      </table>
      <simple-id uuid='{E9401780-F1E3-4F81-B7D8-66971F61C133}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Hottest countries in EU&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Countries+' name='federated.12td1wm1ky720e15qfll51yxxrrc' />
          </datasources>
          <datasource-dependencies datasource='federated.12td1wm1ky720e15qfll51yxxrrc'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[temperature]' derivation='Sum' name='[sum:temperature:qk]' pivot='key' type='quantitative' />
            <column caption='Temperature' datatype='real' name='[temperature]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.12td1wm1ky720e15qfll51yxxrrc].[none:Country:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Czech Republic&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Macedonia&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;The Netherlands&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.12td1wm1ky720e15qfll51yxxrrc].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;Europe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12td1wm1ky720e15qfll51yxxrrc].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.12td1wm1ky720e15qfll51yxxrrc].[none:Region:nk] / [federated.12td1wm1ky720e15qfll51yxxrrc].[none:Country:nk])</rows>
        <cols>[federated.12td1wm1ky720e15qfll51yxxrrc].[sum:temperature:qk]</cols>
      </table>
      <simple-id uuid='{84A59476-1313-40A6-BC8B-C95075C35EE5}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='3' name='Sheet 1' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='9' name='Sheet 2' w='82400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='10125' id='8' name='Sheet 1' pane-specification-id='0' param='[federated.12td1wm1ky720e15qfll51yxxrrc].[sum:temperature:qk]' type-v2='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='15' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='14' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Sheet 1' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10125' id='8' name='Sheet 1' pane-specification-id='0' param='[federated.12td1wm1ky720e15qfll51yxxrrc].[sum:temperature:qk]' type-v2='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='9' is-fixed='true' name='Sheet 2' w='82400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{20C49BF0-4E3F-4510-B0C5-94A0C85532F2}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='51'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='104'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='48'>
            <card type='columns' />
          </strip>
          <strip size='48'>
            <card type='rows' />
          </strip>
          <strip size='46'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='106'>
            <card pane-specification-id='0' param='[federated.12td1wm1ky720e15qfll51yxxrrc].[sum:temperature:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07f1jxd1irj9c414bg8hc1a87b9u].[none:country:nk]</field>
            <field>[federated.12td1wm1ky720e15qfll51yxxrrc].[none:Country:nk]</field>
            <field>[federated.12td1wm1ky720e15qfll51yxxrrc].[none:Flag:nk]</field>
            <field>[federated.12td1wm1ky720e15qfll51yxxrrc].[none:Region:nk]</field>
            <field>[federated.12td1wm1ky720e15qfll51yxxrrc].[sum:temperature:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9B31231F-133B-4E13-A41B-05EEEBC1F61F}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='106'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='20'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.12td1wm1ky720e15qfll51yxxrrc].[none:Region:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Europe&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.12td1wm1ky720e15qfll51yxxrrc].[none:Country:nk]</field>
            <field>[federated.12td1wm1ky720e15qfll51yxxrrc].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A9C68131-B0ED-42CE-8470-5991968AEA6B}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <fields>
                    <field>[federated.12td1wm1ky720e15qfll51yxxrrc].[none:Region:nk]</field>
                  </fields>
                  <multibucket>
                    <bucket>&quot;Europe&quot;</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 2' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{7C1FF66A-ABB7-4FF2-B5EB-70886CCC9C02}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy997NmSXnn+cnM4157va1b3rehuynoRiD1MBJoEAJJG5oZaUZoVrujJWL/
      C/20sbEbExu7mhF0NyAQtNxqNIqZ2RYLDAKJBjVQtl15c29VXW9ef2zm/pDndWWaxmhFd9cT
      caPqnntOnjx5nufJx3yf5whjjOEBPaB3KMl/7Ak8oAf0j0kPBOABvaPpgQA8oHc0PRCAB/SO
      pgcC8IDe0fRAAB7QO5qGBKC5vsjFxfXe76dOnbznRYsXz7Id5r+E25y9uPimb3j23Lm7jrV2
      1vnT57/AH//5X9II0zc91iCtL17kdm9Sw/Tit1980+OkzXVeOnvxDc/5T3/yOZ599lmeffZZ
      Xrt6+0daj+b6Yu+8c+fO9o5/5atfe9Nz/UnQ4L1PffMrbMV2LQf54O1MdwjAEpeW+g9++rQV
      gDRqc+b0aWqtCB23+PpXXuDFl05y+fpNLpz7Li985eucPPsqAJ3GNmfOvkycaQB2NlY4dfos
      rTDh9uJVXvjrFzh58iSNjmV0k7Z55jNf5MMf++d87EMfQGuN0Rmvv3KW5fVtALbXV4jtcKys
      rgKa1ZU1Fq9c4NrNFdAxL379K3zjxZd4/fJ1Oo1taq2YxasX6KRw8OAhAHQa8/LZM+w0OwDE
      nSanT51ibavee2anOMLe+SkgZXVlg+uXznPj9trQom22NZ/85Cf55Cc/yUMH5lm6dI6dngDs
      cO7SUu/c5eVle83KTbYb9r4rKysURyaYnxrj5vXLvTVpxZrVtVXWbi/y+qVrQ/fsNHY4dcdc
      7TNFnDtzmo2dJgAbKzd5+bWL6Dy7s7OxwqlTp6i3IztO046zVW+xvX6bv37B3nt9u8H2+iqx
      hpGJGabGysStGlu1Bq+9fLY3vtEJr5w7y1a9zduB7jKBrl06z8mTJzl58iSdBMhC/sO//xRh
      HPP5T/8+G637a+ikscZzX/hzonaN5/7weYi2eO4Lf0GWdDh97pV7XnPj3N/zxIf/ORMjJarj
      M4wUPf74c59iZbvN1/7qeU5fXubUN7/KVmzP/+rXvgbE/P7/9r9y/sYqL/zZ51nvDI+5cvEU
      z37uC5w+vzRwjeGPPvsM9U7Elz77LPVY84U//CxxmvH9kwM7XbzFV795Cmjyf/wv/zuXb23w
      V1/6PPWBx97ZWOmtUZep70df/vKXAfj6f3uBr339RUxS42vfeIl46wbfPHX3TrNy9XX+/sx5
      Xv3WC3zvcl8ZnfzuS6RZxl988bPsRDl3m4RP/V+/TyOMef3CRa6de5G//Op32Fm9zme++H8D
      8NJL3yHLUj77uS9ggD/87HOkWcbJk6fvO+etG69w6uIKWzde4d/9+8+y0wr5wh/9EQDPf+5Z
      tlshf/aF59hs/2i79U8TOT/ohM1r5zj8M7/M+546xtEpxd+fX+Hw/gXmHzvB/lFgNGFhvcyJ
      xx7m5b/9z+x0Ys6+/BqXXr1K2/tNZiqCl757kqd/8ePM79nDwsJuTpw40Rs/jCKC8cLAHVto
      b55/+nM/Ax94nD/+079mxrt7XsefeD+/+PNPU+rcoJl4HDm8n878YxzfP8q1k1c48tjP8KtP
      PzIw7G1On79NLM7S2l7m7MUVDuye43vffYmDj7z3ns/+6Huf5kMf/FnExjXaKVR/4GrdTQtV
      n5VWiFuaJ0trXD37PY68+/2AZe6FfYfYvbDQW5PZA8f5lY/+IiuvlXi11gSmAIjDJq9ducHa
      8g1ub0eMzga0bp9n7vFf4APvewKA57/4Rf7tb/82Clh8/o8xJqW5U+PGrXVuXL5OBOyem+G7
      L73EI+99mrGpeRZ2Lwy9jzvp5z/yq7z/xH6uXbkIySZnXr5OW7t06uucem2RD7/nwA+/KD9F
      dNcr3X/4GCdOPATAmTMnKU9Ms3HmInCMG9eXGF94P9m2JE0TwAUhyRKrCcbGRnny6WN85Kkj
      RGGISjW/8T/+z3jK8JnPfJ53Hfm3ZFk2dL8DDz/Op//0/+V9Rz+BwKC1TxRtY4Da6g1kaQKR
      Nskyg84Soji554NIIUjSvkaanJwcPsGv8OhjT/C7v/MvMTolSgwc+ji/EBT4s888R+3ppxh5
      kyGB0cnZIaaZnJzi4sVL7H/yMJcuXmR6an/vb089+Qh/+ed/wuEn/xnNS9/hW+fX+Ve/NYVe
      7Wv3NDcX70vpFotbLp/85Cf5xl99vnc4GJ1ia/kl4AmMMYwFguXtDgtjAc1mk+1rZ3B3n+CT
      Tz/K5z/1DKD58Md/g6Dg8ZnnPsPTT73rrvfxhuQUOfboY/zu734CjCaM7v0u3ko0JABeqcp4
      Vur9Pjs7hz+2j/3Vs3z6mWcYmd7Lb/78DO2Jf8JnvvQHVgs//W7cjf+H557f4H/617/G9/7k
      izxz5m/wylN84td/gee/+HkSbTj2xAcA2D9V5tPPPsev/svfZm40wKvO8YvvPcCn/uBTKCn4
      +G/+Dk8/+TCf+tSnUV6Jf/Pff4L2yiWe/+x/oDo6xsjENCCZmbGasTo+Q+DAwmNP8cxnvsTq
      8Sd4cu8Y1aC/bczMTINT5bH9VT716WeQUvFrv/EJvv+1/8jNzTbV6T195pceM1NjgMP0zDgA
      Y1MzeAPCEddXefbZZwH42Q99jIee/BAvP/9Fnjn9ddziBP/mE0d651Z3P8zm8gv8xvF5oupx
      /uSbF/EExF6JqTEFwPxowDPPPcev/6v/gZnpmd67GFNB/pbGGFEbfOazn8UlYX8+GVWa5bHd
      AZ9+5hnmDzzMRz/2K3zp+S/QiTXv+4VfZmzPNBtf/RyfvfQ9ElVEYvgv//F5NtsJ03uOIYH3
      HN/P7//Bp/nQL/1q/znze3tBfw7TMzMgCrznoVn+4FOfRinFx379X7Mr8H80zvspIfEADPeA
      3sn0IA/wgN7R9EAAHtA7mh4IwAN6R9M/qAAkyVs/SvCA3t70DyoAWv+A8N4DekD/yPTABHpA
      72h6IAAP6B1NDwTgAb2jaSgR9o3LS2907g8/uF+modVPdMwflfTmMrI6hok69v9j04jq5A++
      8A1oJrpFZbQCgBB2GQ2QRgnXWwEE5d65k9FtRkZLaCPoaIUShkBmpNrqIEdaf+nGuddhdIZ0
      AE7xhrR8BdckVKoFpqbHQNhJGEAKMAaubSQUKhWOlTcAiEKF62oMoBQIJAadz/7epDMBRpFK
      SZRKwsRly3gcLVvEbpqAcgxpInC9N+f76UyAACkFAnHX3+83pywTKGUQSOhdZ/Lz77iHFkh5
      /+cagkKcXK29qYm/WXJHS9xM/nESzSZLMUuvwvgCojyG/t6LOKUianQc6Xl0ljuo7Mebm7se
      8URjk/GpUYSwrwAD33l5g9qud0OnP/7U5dc4fnweXRgBwJcaJQyN1MEVhkBZTE6z6vL9G5to
      Z1//WdoNcFyEFwzdf/L1L3PiPQc5fe4Wtc0pnsrqFEoF/ByeYAwIIXjl2i1mD+1jX+E2ACmC
      ZkNRLGWkmc/p5iTHixtU3Kg3tkBhyDAG4khitMBRCs83LNarvNDYBwKeTjMeqyxbVk0ESeRQ
      zHWe5v5RQK0hSxW+JyEDYTyMiIdPMgKDJs3saFpb5hcYgoLIBSA/FYNhGJ1qDGSpwHHv/57f
      tiZQ9v0XMEuvgeORXTmLNzWJv2sB6SpCM4KaXvix75FM7eelaC9nvvk92vUmazfX+fYrW+zM
      PX7XueuMcv3s6xRVSlGlKKExxhBriSdTwGCMoTIxRhZUhq4VhfJdzI8xhKrIf3ulweq+p4kW
      HuVvrgqSOGFrZRNjBCAwBg7N+sRRSpxZzlSOQSqDlIp65rMZF0D0NXCSCDodSGJJEks8XxMU
      MzzPIIzDgtfkt2auMCJjptwOAgclHZRUuI4d517a2BhIYoHWdmylMrTJMGRo0UGT9pSIMK4d
      lwCTBHgqwHddCgWB46gh5gewe4gaulcUKqR6IyV35yhvcdItWyxijCar76AnD0CWoG+dR/o+
      WbtFe3EVOfOTg/CKYpXlYx/jb9bGOSkfoj7/OEIOLGtuYerpfTiV0f5hQBtBUaXWajH25+rZ
      19F+33TyNq/jnPkyJmzdcWNBY3Qv6f53W/sDKFYqsLrCWBKxceEiUcfWKlTGRqldvUojKwEC
      KSSeI4lDyZTb5qOTV6k4A9V0RuD5Ga6n8XyDFF1TQ+VMJpn0W/zOrvMsBC2EEUjjomMP1+0K
      wN0o0yyz2thkCt8HkGSZIQytBhdd+40ug2s0CVJldFlcIHAc6AJ/I91f6zvZ2XE18h4cLnDo
      2oo/AsL9p5dkqQpA8vK3EHOHoFMnuXiK0p55VLFEfPsmOg4Rl/4WLRRCSDJVQO27W2P/MCRc
      DzE2c9dxVV+jsHKexqGfRVYnaMeTuVkCGJDCUJBZj/mlhOrEGLJkfRNR3+Dd402+kxxDBKWh
      sX2RcXxvGaO3OcuYPTi2i4MTLdJEUKlWuHrtBgQ+re0av/bUAq6TYYwDAlwPksSaIqg+sxoD
      OrN/t8zeZTuADA0EviJNwelxj0SgyDJwEURRgjaO/d3TCGEQ0mA0CAccNx9b5EIhwTEu0Deb
      DAYQGFJSrVGiKwSSNBH2OkdzMyyzv7iFQCGNg0RZyLwwSNXfhSzTd3cDAxgk7ttLAHrkBcix
      GczF76I3V0jSWZyxcZyJKapzXt9vQtCp/8Mk60wS87C7QmFfle+sL8HoNLfbLofaIYViMOSk
      9q7BEAkPvbaEmj+IChuIEQl+8a7x31/a4JC3gesI2muCS4wijMlNDI0QgocPz+C4kKZVtrcS
      ZqYDTE/LgtFgrQZ7LI4kAsug/RUSg78AGVJJ0lihRYZUlpmTNMMYRRwJHOUg3QRjIGz7eEGM
      NhrX6wYKNCCIOi6FokGgUKaAQNKJQ1xfk4kQQ5qbYKY3RwDXM6RtQT3xuJULAKbL5ClaS/zC
      sP9h0PmTiPz+efDhR3i3P/2UxKixGZLpA4jUIBxrG0p/ELtu0HGMrizwk4xTicYm4ytnoVUj
      Hi+yKqqIXe+yZtHCUdbWz7B3bwCGXt2uEICwtm8rcxGr12H+IJFw+d71OmLvHbuLMYyaDkpp
      0tTl0dIOy80i73Y2SFODckAJQ5ZJqwWNIuvBUoYZqdOx2j4KFUExQ0oB3B2RGaTMJGhjNTcG
      4hgQGUFp2AkVAnxPIaVCCJ3f3UacMp1hjIvJHJIEOmmK57jozMVIg3ATjEjtFWLgDRkrcJfa
      o2hP8fTYbQyyv0dpY4UmGHJrAD0QT8odaPM28wG6pOYOILwAZ/4AurmDkIp45fbAGXYpknaG
      Gpv+id67uHiKcOkq0zNjHHziEdqqiJDS2vA64wrztGoNwL6g7k/37XSWl1AzewCQI5Mkux+5
      6x7HvAbjMiKOFFkiGSHmvwuuM501GSzwKpQyksgB7bK9HaFFhBFp39kUGYgMIQzFcpbbywbu
      4cB2KU0hCiXaCJJEAJIkNSgl7opYag1JZh38rjkFoDNJEgvcICaME4STUiynuH5CoahJTUYc
      ukjjgVb9XdIIBB7tlkPBS3m8sgYit/2F9TuSBCpVfQfz291B4CCNizI+0vhIvLepAEzOk65c
      J1u/hSdTkq1t3Jm5/K8Gk6REN2+Tje+/U0382FShw95Hj1EqBxgjmBZ1qpuXEEEJ4bik5Umu
      LvbDzV373yCob+3QaMboGZsDEF6AkHfvTxUdk6aCjfUttrbq1OsNsiymXDHU61uAta2jlkeW
      SvzAMD0zytZWmDunJv+ROI64p8IfjLHHkWX2KBLoTFAoaoJAE3VslKjgK5JWiTRRRKEgiQVR
      CHGsUU4CSISx24VBk8TgOAblaPxihHRDMjpkok2YRiSJRscBWRwAIlcQkiT0yBIbadrtNkhi
      BZlPFvtkqUSTIGSKQCJzn6IrPIY03z1cMA5hx87x7WkCAc7sPrLNZdLZozjhGtHVy/gHDoHW
      GK1JjYMsVH+yNzWGyalR9h7fD11rOw5JTD++rRfPMztb7Gn+LM1YW9kmbjXZSX3au96FUm/8
      WmrNkFc6a4wszBG1Q4zOSJsRZqOBKhXZvrbErulxHDmCIQ89ZobVlR2K5VE8T+Xzk3iuIIok
      0u/bzFZbiqHfpchw/QGnUkBQ1LiuAaMplhVa0HNW0YIkkUPhSZFHhgJfksQOpD5GRWhiHNeQ
      ZZBFPpWSvX8U+aRJhu9lSOPTbkmUhJERiY4NrpSY1EU5EamGNBEkiUEKgzA+GkkYGrxCksu8
      gMyGYYtF+wxvWwEAy3x6e5W0vor2fZzJKWShSHz7Fqoygbh1lmzmOLJY+cGDvZn7Aev1lD0a
      QNDY2eFmWCCc3I1ceh0WX+Px4/NETZugAsPZyzU2qodgqgRZhnLv0QLjDtqobbH/+D6kBNf3
      e6E+rW0kidkpbq9uMdOqMz5aZHunxWu3m5QWFvj2q6t4xByYCdCZYX53BSG77qHV+klsyFIH
      VzmkOsX1UlR+jzQRtFuKckUjhCbsSBxXo2UrTwZmCBRCCrQWNtEFCKNwTVfhCBKdEAQe4JFp
      TacVg9SUS3173vcFKEWn6bIeBbycjbCXBtXtjP3jKQaNUhKNRDquDZm6CRKBNJAZ8AOTJ8IE
      yljBsnkI8Py3uwA0d3D3P0R2NcaMzCCLJaTrEuy3eQBjILr9Mmb/k4gfoHXfLI1VnJy54ZVz
      10hGDmDWlzgxHdIWI4SdiNX1DruP7MYYwxYVRDFnjHuYO/eiThjb3SVXyGbAme4i0CvT46xv
      bfHKuRuUFxYYOTCGch280j462zWuaw+tNRsv3+bowTniKENI8ByFEIZCwSABF4gSUHlCKYoE
      nidJIoVfiHJH3JBmGc4A5CCJBV6g0UJbl9N4SLpmiUGpBE1qI0BSolOPSnnYFkvp4DiSalkx
      UtYcYptXWkUOFFqkiYNyEzRRngW25pUQIIxECBtmjtoC5YIUqrcTSdlfp7eVD2CMwYRtzI1X
      kPU15PRuKI0i9zyMmN6Tc4r9McZgDPijRfTGrZ/I/YUQvBZOsrW6AUbjKsHP7dGUA4lOEg48
      dpy1pEh7dBdnL9f47uUOojyGae78UPdprG8Rtts9271n5w5GlQwYochcn+JoFeVa5hMIimOj
      +KUihWqZjggoFAzFsqZYFLiewXUBoXvQgiwVZKllagCdGQqF3FQSNmyqM0UUStJUgMnZSmQI
      oxDGY9BDtgpCkooWqWjTbCeUigIhBJc7Rf5qY4K/2phgOara/ILoQzQeLrZIUoPrShQBIEEY
      C9sQKUksSFO7Fp2OxPeznlB0KY76uubttQMsvsZhd431mzdobY/jjU2R6ALi8Ank5ReRIxaH
      k2xsIMsVpO9bJ7PT/MnNwUCr3kApwVro4tysE63W+G5pktnF02x5M6ij72K1e7rOqLz+dRrH
      f/6eDu+9yHnPh5mK/57l9RUS6TK2Z3c/wUYOOYgiVhaXKU9PDf2tT1ZKGm2dJ5EGDnfnJjK0
      tmFShN0FHAc8P8GgEDgYY0hijZR5JAhJFAqMMQgpkYoc6mCQxgGjaHc0qRYUPOucup5LkkIi
      BJc7Ae+v1pn2uj6JgzZ9/ySMwA2SPPTpIlFkJkUIgTAKYzSJ1rSamqCY4njZXQ9mTJ7EM+Lt
      IwAmSxlp3mTkyAyrzRhnat4eX1snqa2T7DTIwhDjVyCG4rjXM1WcpI42GiF+/A0x2bjF2ZUa
      oxMdaG6wOH8ErWKOFBvsbG0jHnofALpdRxarCKloPvzhoUCMbtcp1JYoELJTTzCH34uQikcK
      Tf7Z+BqaFMQ4C7tg+fYWa50ObmC763Uzyreu3mD66KEBoRiMUYre8bJniCOD7/sYNCbPxGpS
      shSyxCEoQJ6YxTEQtV1AUgo8hPZQxEg3xAiNxEEFFs7QbrkYP0UYAUIjVEwUC7yixskUcaSs
      02oEgQubscPjQY1xlZERI7ECI4Sy9j0ugQ9x7KK87vPInLet/2I0uH6KH6Q59kgijYfjOYOP
      j0kdjHTe+iaQMQaTRAjl0CLg/JkLRKNTZA2LC3JHqmRXzuC995dg/3uQh5/ELbpDeB2/WkRe
      +Ta6vvljz8d718+RCZ9kcg7jexC2kLsOcSmbZvP4R9DtOtGZb5D+7Z+jO627ri+svMq+5Cr7
      5wNm50eZGHXRKzdIr77C7atXuHJ9iY3NGlGUsLPd4vriJjrTvXBqd02EcnsC3oVqd0nrPPSq
      BXJ2D0s37XPb5JAkyVGdAocgUEgdII0PRpBELsWipFSwDByHkoJbxDUVlAkQxkHiI42DUhrP
      kQROESUcOm2FK31cijh4pLGiWHAIPMWG9vjGzggzxZhEdwgjTZZBp6OJOy5hR6G1IUlNrtX7
      MGhrZtl4kxdosjSHS6QCV7k4wgIJhVFI41L0fFxHWTjFj/3G/zHJGNK/+wueeNdudpoJ1YUC
      rn+UKzdWma24XF26gfYrOEdOoFs10mvn8N71T4hNmWzpFoXdu+w4SuJPjBKtXUAX34sYxAL8
      sOR4yHIVhKF45ChoTfPmq4jD70euX8NLtnFmy3SiSbKNm8jdR9G1DYLWGmXZYWKyhHR8ujbz
      1MwoY1FM1I4pjY/wui4SrbfIlppIx0GO7UUv15iptpmYnWRnfZuN1S06jRbjey3W3kaHBm1w
      g8kZxvVcbkculdUaMzMjeZTE4Hl5ks5YwQhDQ5p5+W5gM6kCKBYtI0rcHo5HGo9OFJNm9v/C
      KJSCctFGYVKTkJiYQhGUEihpcGPDvkJMpBWR8CkpMEZSKAAIWm1Du2NIM0PF1WSkOFj4hMIn
      FW0bgRL06hGk8chiD0c6CGOTcc1GSrGgiJOUWq39FhcAITDSIdOaQw/tRWv70k5M2ZaGRlzn
      UuE4sjqJSVPcR34WAHXwccTr3+gP08WFeIKo00RUxn7oqRidWRs+SzFJQrKyjDs7B0IQjFRJ
      r/09wfwcYOdWOnqY+vdfJLr+KgeP7aK8axKwjN99jq5Gd3wX6Vn/RUhJUK1A1YZujQFRLrD4
      +us0ak00CjU2wfj0LGEY4/s+rVYbJSV+4JEkCUo5SAlGG7TOKMzv4uXXXsV1BGMTZUyqiE2C
      4xqUysjokGqPUhmr5bvr5Ro6HdMXAuNhyPKkVEqWSuJIIQUoWSBMQUlDpkJSneG7YPLIzKQX
      spVqXqmVebzcRBvwvb5h6LoC37NxfjIPRw07NYYUI/ppcGEUWVzAV14O7/DZ2GhSb4R4nnXe
      d82PvsUFwBgKnmR0anzI0esiC2b37eLyjQYwhXAcjM56f8fzemd2obi6XkOHl5GVe3eLHrq1
      1pjmtk2sxSFq/SLKEYTbbaoHF9Bhm2S7hjMyiqqUcUbKDGEFjKH8+AmyKxcoT010D+ZML8iy
      vuliGHRiTfdym9gR9nynXGZi326yDLY2axhj6LQji8DE1gU06m2EAKVspVU/4WaoHn+I04uL
      vMdTVMoBCEOS2MqrLLPrk6YGR/VNx/zWRLFBSUhSiVIW92MwVMsKVzq9a5XMtbPIEDgkSYbr
      pWRERB3FbifGCQxSxvn+4g3fCysISWKQ0vRMvHvVHggUSqic+S21OzFJknFgf78S8K0tAEKQ
      zB/jlZMXmJ6usvvYgV581wBSKmQa2sCnMaTf/kvEyCROIcBsrcLEyNBw3q7dmK0dMq2HMf13
      Un0DXd/iqLPOWDVAFSSnNlKcmV04IxE4DqpSzSMrphd9NWYQigZCKdyR0aEQTVeQrTObA7wy
      C1swxr70vj/bxdCDKJTsNULg+z6u56CUwvM8tM6Ik4Qg8HEcQZJkpJlNImWZprVdQzkO0vWJ
      4xghfMDDcRI6bYWvAqpFjyjShKlBSvBcQaYh8K2wRpHBD+xshNIE0oPM7yXZnLxQRmOjTsoR
      pJEELWwFgAO+IzEkaJENhS0BBhtou64gTmwo2+4S5q7CSYGLuWOMmekqtXpIoxlaIeetLgCA
      XDhKo7nNI3vG+oyR267SlZQ8aALoDDkyRTBRRAYFzOhh7kJvAdpI9I1zSMeFuSP39AfEzQt4
      XsDhE7twXOts+kvbaCQqCGyCSpih0KPRXdSnTdAAZJ2QsZHSkAMrBLSaHYzJQ4k5xqwQFIii
      EM9zieKYQiGgXmtRqRZwXYVfKdlEmIFSuWBtfmNj60K4+IHqRYIc10ZMRB49iTZ3ODTtU9od
      UKnk0SQsSM4l6CWwfN8ylNaGdlsjpMBzBVJCrEOU8hAoUlIc6aCNIMu64dF8HXrAOHCUQiJx
      sFlpLUApB2GGw8FJmiGcBOhXxXmuHduiX7vZYysMwljQW6qHzaR6PQQMtVpfAN7yUSDdbhDU
      b3Ht5Dk69Ua/AkhAGqc0RI6lzzLEgXeT1hu9v5Mv2iDuxS/7lEYUxTKIm3d/zwzg6K4Cu5w2
      r5+6AMDV81eJu5j9nOkGyZg88SK64DcLE5BBQLPVwRi7pSP6m4E2hizLKJVKtFttsiwjTTNa
      rQ6u49KotyiViz3BCbdr1lQRNgzahVhro9HGll9204AWh9TXFqFXYnS01GN+6JoVAoNl8jtJ
      KkEh6B9PI28A82MFzFFiSHMbY1B4KONj4gJp5BOFklZbEyemd+5gCY7WhiwVBM4dJaFYB7re
      NMQxhB0b4REoFD4Kj8GotjFWkKanKsztKpAR2kzzPd/wW4RMmpBde4VH33uM4oBTCBC12izf
      WIGFpwEQno9JY6Q/qNG7nQX6NFQzcI/O8abdYGbE58qVi0zut1EkgcEIyZ2N8PqCYPLf7xxS
      0MkEOomRvtez6f3Aw3EURhtarRZjY2M24+ooXNfFcRRKFQnDiGKpQGN5lbnZ0SFN272ffQwr
      GGLgWH9eArcQUNtpcaW+hdaG5UbK/JjikYPzZJkmjDKUtPF217ECnqYa/L4NXi5JwsgQ+AJF
      vyg/DO0Da20LgLQxpKkg8KFcVBijenNKEkOrrVESgkD2rnPvIYBdqpQEaWbASLpVXzYhZu9t
      /Za8jDJLyLD5ii69tQVgfYnZ+Bal6lyu0Q1RJ+H89R02zAgUDqOExKQJ3HwVV06TvIIAACAA
      SURBVHRwR8cGLJ/7L2yyvYWu7hsWD2NYaF1hZM8Mj3/o55AKkihl6fY22dQ+hDZIJTFGQ27C
      2B1BonXXfte5WWK1sDM+Tntri+rcbPcWuG6uSZWgXCkAAikEbhfFKUAhUU4BIaAwPs7q0m12
      H91P1GrTqdURUlKZmsBx+6WA90J+L11ZYrPWZomUTqFKWqpiPMGFW1vsmTCMVLyeYGWZIYzy
      +ysIo5zBvBhpfNLUYLy+4KepoVK+e0fsCs6dc3JdgevaMGyzpfF9gc5yUNx9qHtNp+ORxgIn
      L+XU2uQF9JrNrRZxkjA16w8xP7zFBUBUJ2hcirj03bMceOJhrl1Y5Ka/D+ZPoAZWVje2MevX
      EeURpO+hfC+P4nRQ5buRoMnODiFVnMndw384/x2aK68S7/sFvEKBxlaNF/72ZSp79pMkCbVa
      Hd/3iJME13Hs54eEoFQssrNTo1gskCQJri24pVotYOIYp2g1pmB4h+hieoTII1U52G1wJxHC
      hkl3mi0uvXqFHe0gK1WMNvDqDXyTMupLxqYnyJKEQtUW3AelIp16k+WOQU3N0QOD5E64KpV5
      /doyH3jiUG8+SglUbp4niZ1DuSTRKAtMcK3WVQ7EsentFj8sSSkolwQXLq4zOhpQLHisbzSG
      ojd2qrq3gweBpNHMoRGZREpwvJRMJBRKhs1bHUoV2VMuXXprC0BphPDdv8zNxde4ueTBrp+7
      p9OqxqYxJ34FE4d0aus426tkO5uU9sz3zunavBgIr11G7H0XJk1645mlC4xuXMTzXW5duYFy
      FLsO72dqcpTtTCOVwvc9CoUCrmu7DnQjOWmaEgQBjuOilEOh4FOr1dHaoIolNtduEeRmzmCd
      sB5wnPNJDj//AG8lyiMqT+A4jg3salATk6TAahhx+/oGslggu3qFwLO7ghtH6JFpVG5zmzxi
      JYRB+j5e2jWfBmz91OQhWlt+aC3+HGgnBIVCN+qDhVLc4QS/WVpdazA9VUIbQ7MdMj9fYenm
      NlkGE+MFShUHTZzf30EKN0eTKoRrnyXLwXx+4HDw4Bg72x3WWi2mp/sNBoY6w/27F+/9KdMf
      ldzReW4mPx2d4YzWpIvn8VpLCM9HFQqoUrfYfDA4CWhDuFFD736CZH2JPXKbx4/N0qrVKY+O
      4gU+cRTx+kunueVP4E9M9mLRdjlFX0sbm7xigKmzLEMpgVQQ374JnTb7Hj2G0/M/rBnQpZ5j
      nOP9B7W/FLbGNm61ud1KEXmrBqOtKrdZ32Fh6XZLy6IE6bkIIYecTiGsOKT1OqJZ42PHp5if
      nrZOOn2TpNHQBIG4y0ZPU9MXYtO1/fsh3sEEF3QzMRkGTaMZEoYxI6M+vhMgcMgIbVgvp82N
      NlrbhOHMrGXmrY2IJJIEgUOnk9AMmxw8OHbXDrS+1qJSLeF5di3f0jvAD0VpTGB2cOfnyVot
      0naIkJKkVidZuYWY2o2sjiNMRuZWkQeOsnP2W7RdnxI1FhcFh47uxeQ4GtfzKI9WEM20pzm7
      usTCDvIdQBhs6zMb/UEIXFeS1rep6IiD8yMYU6W9vkpDKIKxMdxCKR+nzzTd3aD70yulzG1a
      r1QkuXoJf9fuXsTnbr07nG9QvmvnZAajQ91sosAZGYGREc7dXmffwvRQUgkgKFiYtDuw6WaZ
      yf2Ye2t9C6kwCAyZttDrjBiEodWKqTci5uYq+TNq9B3MDzAxWeTmUp00M9y6WWd0rECqU2bn
      qzSaHSarHuWoxNpqm2LJodNJ0drgOBLPc/B9a8J53jtEAIzO4MK3MI4hawo6WQnnyPvorN9C
      7D2K3H0CWe43reruWYltdMN1Rli5UiNun+fQsX14BRuSO/jYMZqnLrCqzTDz2LsCtvmVyAVE
      ZwbR2qIkUvbOjjI6s3fI5k+ikMsXl2izgT86il+p2FRXb9g8CWb6IdMss4LS2akhCgW0tjif
      bjjY5ImmOwFx/WxzN5JjLGqzO/vc9BEC6kbydy/f4KFdY9QabZpRxuPHFnAdkSfp+qTU3ccG
      yfPyXRBNYmKajZQoipmaKtJoJMzP932yQWjDnTQ6VsR1QDmSMEyZni5hyChXbPa47PqUyz6b
      m21KRZdSebjSrrumb2sBMEaDNqSnvoIoV+HIU6S1dVTZ4nHU1K77XqvrW/b6nEK/zDfWE+qd
      i+yaKLL76AHq65us73SQFatvBx3UYbPDMpIkYSKqcfypx2xjWAAjLGDNaLwgYGq8gtGaJKyz
      ub7J2IF9OXANRL4jGKxZAZb5w1qd1WaEOz4OGExmz9PGYm8gT8RJazEn+beWjYGg4CIG5p4k
      KZ7nYjFJVphq5XFeEYIzF2qoUgndaVO4ehtXSnbNzQz5CVlmeKPPHkspENIACb6Aes2aO9vb
      4T2jVPcjz3MsmgUol+9fRjoxcXdPJaDXXe7tLQDtJqJYwXnPR0BnCOUgxuf6f09idGMbpEKN
      2ghDur3GzrXXidKIzC8Oh0GVw5mtiPNrG3y0WsHptHhkqsC5zCClsA5sd+wc0zOIqBCuS034
      gI2mGLAd0wbwPVMLs71dYSaJufbKRdyF/UjXtWkp0R9fCNBpwsrqJnJqZui4lAJ0ruFzobEZ
      akEYxvk4gjTNCMOQUqlEs9kgCApEUUKSxHieRxTFjI1VQWBNIkBVqvz1ehuJYWLxIo/PlXno
      0LwVOg2+Z2P69zODujZ9vR5RKDp4niIMUwL//z9/sevIv60FoNsqEbBgkwEyWqPrm3Q2V+ls
      LTOycBhnbJrWlbN0XB+UhTQMAq2MgSwo0RZF/vOZVaZMG2U0zq4yFEtIaazJkUd/7t4JIC6U
      2VpZZ2Juaqimd7CwHXImdlwq1RLrly8QFAvIyRk6GxtIx0FhcMbGaW5sIqemsZijrt9xd0LM
      Zpu78fnUCqy0yTvfd4lT28nNOuiKIAiI47g3pzuhUapQRErYKZX4ej3i+18+w299+PEe02f6
      3mZQ194HyFJNddxmn6vVN//B7Sikp/1/HFLqbS4Ab0RCSoRfoDA6SWNrmdWN28ibl9G+te+H
      6mxzj3KQUWOvyC3s9updXqTgu5QKDsXZOVRwR1x/gB+dSpVXVrY5HMbM7ZtHCEGn0UIqBzfw
      hxzflcvXmNu/wJ5j+4k6IbcuL3HsxBHiMMIv+Ny+fpvV5WUyN8c33W3m588wOAnDxMQIWjOM
      0TGGrFwi0pJA2mxsoeDnUaFhQbYFNf0xDYbxsXIP8Aa2v2gqzF2w5cGmW8WSx85OyOjo3TCH
      e5GNoOUd9X74yOoQZZk1g95RAqDbDbLaBp3VJbzJOfyp3RgvzUMsoAuWoYfBacJiavT91zwe
      myHGUI867GnWUcEk3ZhhFwE6SM7oKFfabVpnz7P/4cMsX7lBcWyELLb9a7I4xi8EjM9M4voe
      WoMXBOx7+DBgW6FoLZian+G15QbCD3INTy8D3fUVuomEIVNMdP2J3PjKn1UJQ1FlVhgy0cv4
      9iNcXYCe6KFShQATxywUh5/S93PsvoIoE/h5VwmBItOaOIZ6PWJ6+t42epfSlN48stTWJytl
      2zE66q6N/U2T69ri+HeMAGSbK2ye/TvisSmMUKjlRdTiBbSBJCjnuPl+ONDa8zYe32We+2c1
      7cutmpBgsu9Y34v5u6c72+tU9k6ztnSbmcMH8IJ8TzeCjeuLzB/aC73796EMF8+cxwkCsjim
      vVNHzuxHSMuYWpvc0RV5eNMQrq5TkRqBIZqc6T9D15ke/MjKwLx7gDr64dFB82zQvJOej3cH
      H6ep3Tm+XauyELRYULb9erOd4XkQBLCxkeXPd/cqdbW949j/p2mf2aW0JlB2/yDRDyQprTC9
      YwRAjk7ixR1iabOgmeeR5YakDf/pHmBMZ3nEZGDLt1Bj0+OVPhzB9Gzsarm7lQ+80HtIQGHj
      FkcfP4JX8Iew/V2kaJZmJGGMFwQIYbjx+lWiOEF5HhMH9tkWJ/l12SuXWG8nyMBHlssY5SId
      B91pw842Y57DB/fPMT5a4m9PXWDFuITjk70+SF1zRgjR65cz7JOYYW2fh0oHUavCdUmyge8L
      YJlzPfOoZQ5P+W3iLCOJrfbursmuXRWWFmvM7xrpLkFPCwnRzy+oe/jGXZjInT7WD0Nveyd4
      kIRyKDzyfpxmjWhnlY5XwCjVSwR1O7X1TFsBDERdoL/Qg/5BTxDiBKfsk9RqsLWJ8H3UXPcr
      NHlOIIqIN9bRSYjje73E2aDtXltdp7HTYOX2OgpDGkf4U1NUi8X8pYtebUHYbCIdxfS+WYSU
      RDvbhHXbd7RULeHt34dyFFfWlymXy/zTJ49Tr4e8cGGJeGquJ9jduuFes6gBjdwVeZuMG9bW
      WX2Hh9yQwHc5srcPKwG4lJY43yjwrpEmqc7ykKsdp9u3B6BQcNnZbuP5imq1rxDeDFNLRe7L
      /OBze3PO791FzNxDABpc+sZZRvYtMDozjVcoErWaCCmI2x1cVxBGhspIkfrmFn51At8TbK9u
      ML6w8OP6Jv+g5C8cwgeKtQ0qi+fZru2QFMv53ioAyc5Og1KpgPS6q5pXXQ0kkvpRFQCBaDV4
      tGx4bMSnXIHZR4+wsxPxzVcuUI81E5OjJNowN1Wl9NhBNm+vDO0MgxGgsNVi7qGjOJ7XM2ms
      1jWQdzzrYv1vLS7jzuU9gSQEE5MEEwPMY6wJteKWOdjYRogxyuWApNHCjNsa5i7DDWp8raFj
      bJw2Q1B2MuSAoEgJJkv56LTD4UNH78rUAuz2Iw4HHUyakCZ2R+hqdMexH7VJU5jKfYB6PaLd
      TigW33xDgm6G/M2SzuFeSnU/6nefHWBk1wGm982zdvUC0weOsrl4jaxTZ/zwu9hYvE6lJNmq
      a0z1AO0bl4hqazieR6JdZvfc/aWUnzaSI5O4x59ibPE8G+u30crpafMssz3pNzd2cByHOE5w
      Xdd+4MFxUEpSrzepVEuUSh4ijvnZ2SIfenwXUho6ocQYietGHDo0z1Y9ZnxhlmuXb7K8FbGv
      FDN3YC/d3WYwwpKEEVEnQnkuCMv8Uojcmc1NlTwbvL2ygRgZ6/0NyE0VM6BFc9OmUub72zV+
      xm2TxAU+eGQvX12r4YyP9xxcHUdIL9fAwmIsC3ntcL+9isCELWJZwLgVTvl7Ob0e8C+m1u/S
      2COONdCNEqT0P2nUJcftZ7KVsmHQjY12TwBCLbnaqbAee1SclMhYPNUTlW0C2cVdvXnzJ02t
      4HZ3C9l1pO91cu3WVXBjHGFYvXyeOM4ojkxSqpTZTlrUtmBkeoTNlSV8z6c8NYvWiurET7jb
      8j8gCcfFmT9AsbHDYF+4YrGA4wjK5SJpmiGEwPO8HGFpkFJSLBbx8ia2j5ZCPvT4URzH4HqS
      JFEopSkUBY9Wy/zZ6dN889U1okIVITTXb1/l4GyRkZJLeWyE8vgIO4vLeEajwgSXAaFgIBpF
      Pwuss4TN7SbuzCyDZprRMq+C6voT/Y0mHR3h1vYmh3cFBL7kuIy5BKT1Gp12gtlYxh8fI9i1
      i9QIiqrba0hgkoSolaDdIqa8Bzk2w4yTcajQ5qhaJUktrGKwQizLTM/BvkddEdBnwi5T3r7V
      oFr10Y7LX6zvZj25OzxakJrHK/bTrFJaxs5SO9b9hCFNBK7yclCebaEoJfg+PzoaNFo9T1g6
      xkj5/uf8NKFB70c6bFP79n+lMWrtaJs4HW40dScArUtCpxxu32RudoKPvO8QrgvP/dlL/NbH
      j/FH//UCXuBzoeWR+cUhDD8YRqNtfvPJBer1kNmZGbJEcGtng6xcptlsM7F/zxAALmy20Jkm
      aUdsrW8i53YjHInuMfng2+9KT7cRrM1S769v4En4xkaMl0Zk41OEchI5vYfoe1+mMl1B5EA8
      rQ2i3SRLNLE7ijo4/B21PV7KL41tUXVs3840NT3kp5TQatvqsCTLMCJGqmHQHEAY2mNdAQjD
      lMV2gWUxzqnWKPeiQ0GTj47dGgpLd7O63j1yaWki8JSLFFbXD1aEGfNjOMH+zDHefO7up5dk
      UKS06wDh9jpZodLL/FrG67cpsce6/oC91gjJ5dICi7e2qZy+ztJWhwtygv/zz19npzSBzjyM
      342hyz5aVCjaMYyOjDA5OU4cSdZXV/F2zRKUS1SThJtXrlOZnsRkGVtLy0wtzCGBxeUNivsO
      dN3qXpnjsDkl7nCwBTrLCKTDxfVt/JndYCCuJ8h9ewHwn/wl2svXMbVNTBxSKGjCK5fJSpME
      H/jgXevmyZjB7/J2k2CdjkYqQf5VKnxPkWoF8u6Ype9b7d1FH65T4WudXUTm/kpzn9vMyyT7
      x5QDUXRHxtrAxUaVSU9xql5hLXb5F9O3cQc+nBe9k/IAb0Ryajesr9yjuUaXBtV+Pw0p8gxN
      qlxeuJGRigJCwlZ1Id+ODXSLy401nyo6BBVQOfQQ33rxHAv7ZvCVYi3VzBfLCAzKddl37CA7
      K+t4BY+mqyiPjwGCvUnKzdoO/ujo0G7Urfu9a+a53yCUw7nzl9g5+BCm3SIOBebAe4b2DTUx
      B50N/EoBx/fwTryHzvVFdKdpHeaog6yOU1VW+wf3+gK76OL9+yMr6RNnMVmaDiWuuoC9/7Iy
      Rw2PyKg3ZH6A4+WUgqiCNmQiBARaxARB384Pw5TlmmQncXls3mXCiQlkTEZAYqLeDuC6DwTA
      UhyiwgZpqZS3b7ifIHRp8O8yb47VQhSrKOlgjK0Cs58gcvKEkyRsdxjdt4fi4cdo37zCwQ8+
      xZlvneHou48zXymws3SNoFwkaXWIjcItFPJPjTrU19apzkwxOjtF6+oitdo23ujIACyhb2L1
      KsmQNnKTmwjRnv3IrTVKoyOsZD7OHRJjkpDMuLidJgQ+Qij8uVk6r30Tf3yETiR4bPoEj1d2
      CKTpZYfT1KoO1wElxT2TW57ySEhJkr4zKiVcjqtcTu/vO44ozcdGW2QiJNLwWrPEkaI93v0W
      sTCSZrtNsxUhlf2M66K3i3cXUtY2alTKBQg8FD7aFEiF7cmq3lEFMW9AOg6JJ2aHjvVj/SL/
      1/Ts8aFzDJDEaK+IUn3hCaOEJE7w/T6eJk0z5OoS0zS5sf99nHztu2yFDsH5qzz05CPM+CET
      5YCJvVOIHC25tdmhXq+jJiZ6tv6ug3tYfvE07sgIJm/i1UV3DpckiBxwZ4FypalpSlNTNFfX
      7bcT7iBZGkEefIxw+SquaZFFIVknhoPvpd1pImenORsGHChKSjrGRROGAqMFrnIwWuD7gjA0
      BPeA93STW1Fk1y5MJd+sTb3hu/n5kS3mg07/QMFij9K8ikzisr0VEhQcpqdcbM9SyZXlMh+Z
      bUF5hFq9TSeMGR8tWxPW5GFt8TboC/STIKGUTf/2qkhkz6Ye/AHIBjox2/i7ASXzTnJ5LW6n
      ATrD82wL9k6nQ5LYyMPNl79HNLUPhKSx/32IPcfZSnyyOGEtKVIouaQ6JtUxXqCY311kz9wY
      hUopx9nbexx/eD9i5Sadyxfotgan+3KNwGiZJ7EGC9MNm2sNanvejxy9P+OJLKGzsUlbTJId
      /ABydBpn7gCyYCMe/2lrmr9Y30WdFK/cIKjWSWWDdhxiP4Fqu0XoOxChwkiLv3HszyvRGKG5
      tw4ekSkfKG9xsePRuWMcTUQmQrSwdQ1CQLEQ4JgynhnDM2McC/o+x0i1SKngs7axQyr6FWbS
      uKjf+73f+73uid9ZWrvvovwopIIKdf3TL2Phyg062jp0JmcgmXuXwwJgndlB+1YIMMpFNXcg
      jigXA6ae/BBjRR/R2CBzXAoFn6Dg4/s+getQePgpkvzbt3Jkks7qbdT2MjMH9xFtrlGtFpHC
      fscXY1BKs3SrRmHMQgYMFhw3NjVOVtuhkwncYrGLfsvND0NSq+E3t5FhmyjVuIHPelxCVsbf
      cD1kdRIzvhf1Bk2CW9rhTHOKgoBpr04UCvxCSifKcPPW7J3Q4OXOqjXLFBlpz0RbCDoIJDfj
      wl3jR8au88cnb6Jkmn9OycmL99Oh5FsUakpBGYegV9u8Lwj7AQ0EjqPQIqYdNvE8B0WAxHn7
      mUDJ0iWM0Xh7jgI2zCmDN0YcJpG1Ca2502UgQb+XWheM1u2ecIcp5LqoYomiX6L88JMIz8dZ
      OMTUwiF48QU60kEIjTGadnGcG9/+GmNHHsWZslAJ98gJbjXWmGy2SbwpKptNZmYtUySJsNnb
      qDE0Z7tDGY7OBNzeaSHqCcutDKUkkREUheaDe8cY+//ae/MnubLrzu9z79tzz9pXVBUKha27
      2RvZzW6Ki0iJpCjNSDOjGVGyRnaMJDoc9vgf8E+OsP2Df3CEQ7JENSWPJA5lc0LhoTgSJVEU
      RUnsFntBN/alsNS+b5mV29uvf3hZGxpAgwCq0ADy29GNRmXmfbdevnPvOfec8/225QkjRXm9
      zpmlZYQ9dlf38W7pTP6+3IshQoblIlFkYTkBQtUQUkeEkmpNYZnWdiJMaCaa7hMEYODwQqbE
      hVqOzfj9j+KMb3OhnuOp9CYIRaQSg7mZ2wd2yLi27w9R09dP4hSpDOwU+JsWXk2STkvCKHh8
      DCCulvGnx1m+dJlIM9HffD1ZwWWy36Y6OjHSWcLKRvIz08TKF1Feg8bmBmSaq6tSTYK2HaoQ
      AKKIlNRxskXq68tEkYffPDNPRzHFFz93S0Nzip3N+pxmoGpaNCT4l8/So5toxS6EnSK0hzlT
      WkBe/EcWerI87zt097ajCPne98fR2zsARdw89BZCAyRLvsFLT+cxtUxTCA5qtQDDkkTKJ4oV
      mtQotHeQTo8iaw8+Wfm90iBHGh7PpebQdQPb1kmn0igESjbwojpS5PE9QSqlYWoWkhhNgNQC
      bBmzeZuShovVfGIAJI/5+/uEm6rvt0CiGxY1d/TkUc9lbUqbLqvrFdAeEwNQgcfy33yLunCg
      ySHpapmtUnhEDO7SOkKsb2dTBSBmFwGwwjKyzSUqdiUuzRaP3zYEbakcqWMvIIQkNQpxo0pj
      YQpCH2fgyPse/nB1Hi1TwCq0I9ZWUM3M8VZ9faSbeEszpHYp1QdmhrjvKc6/9deUF9r4hS8V
      mJhZ4finP0GjUmPpxjQi9DFjRWp0BM0wENkci8sVero1pEzoTYwU6HpM5CWi1boRcTlI8c4+
      PPxbuOYcYS0s8KyYoNfdpF4NkxqgEDJZnXy+iukY+HGMVBKFRSMIMFCUo9s/hrO+w3fXevh8
      21JiAOw1gGSZuvXnZVMUG5LAWVcJy14+p/Ai0A3t8TAAYVik2wrUN5Jz4a3ygJubQLb7dMXu
      hg+Fp+cR5Qh97RrCMhCeh5ISuz1HPd+BQKA5WXZriEknQ/rwU7ecT7A4yebFt2j75M+jqiXa
      B0ZYm58ibq5CW/U6m2srOIGPaBqHSGXRhp/C6TrE0sosf3p6k0MyZGgkEb1TjQZHejoxzTSX
      L12j+PRRrPIyXSODQIjnRZh2RBxJQk9gWiBINL4ul9O3nOuDxIbWwQ+idj7rzDBozhBFNrbt
      s7bmEYYCz6uhG5JUSiOdMjAtn8D3+JizyA/rfbceVAguNPJcmMvzhcISJzM7ouNCJdKnN9fi
      1RseE7MLZLKSrs4cup58bxKTCI8wAk1vqsjsy514CHCOPYcR1HY11e4uPZCARAi53eiRCCwk
      ZQJKCZSQhGYWP7ZoaFk8maa+UoWr1xHXr+PPTd7VPJTvsXr9HJ6Z7ETm0Rew+4Zp6+hCj4M9
      p0u+0Ng49yNU4O8ZQ6Sy6EMnKI+8zGk5ysLcOpVymUx3G3XPp1wu4/kRG9OzGJpCyIStzbYE
      ptQRsYmp2QS1NFIT1IKYjOHfaroPHkIw6RdJp9pJpSQKg2IhTTqt09NrUShoVCsulp1wKxqm
      xRFjiQyNO4+roFersb7mMr0UsrJcIw51trhXt/D9xZiVtU1yGZvuXpvVUomZuXUgKYNI2OTU
      dmn5Y7EDQBLA/voXDvO9f5qkEmucGMhydrrKemhunwzAtieeuEbN8/Et/huaXr8UyfFmaKTZ
      cpiUc5fug2FiaBqxENtF58JySB17AS19nZUbV4gNc3sOFdcnfucH6KksIg7JPfuJPeIc2uAx
      TpeXGK6vMzbaw/VT5+g/Msrhof6k5qZcYWl1mZ7uIpGKESppoUSGrJVW+Nb3r7JQcmkvphCf
      +aU7CoJH5XXqk+NU52YTpRddJ6qU6P6Zfw2GcdcyrhN+JuEZEilsxycOJahEERIR09kpGL+8
      SDpj095uYhDyuews/2XtEPGtCnoAooCrK/C6fJacFvLrvddZW6rT09kGTbdoruzzViNDZ1cf
      J9NVAip0dDhcv75BqeRRKDR33xiEEo/XKZDVM8CRjoDDw70YTdq7/rev8SdvVWh4EXEck0rv
      UA9KAYGv0PXmUWdzM4xhu9xBCDAEFMeOkD727F3NQwhBpr0Xr17lZtlVa2CUjihkfeoqoWE1
      jwMVNaUh6w3SMr5l6WSU72bTW0IIQbqQJ51P3BmlIJXLULoxhRQR15dCenKCkUM9uK7k7y8s
      cm3RJZA2G4shPe++Qfb5V7fpE7egfJfK2bdZHb9GsKvnYKvQzvuzb2Jqiu6f/TcI07qzISiF
      NXGK16cWWFtv8Mrzh+jp6kThoeuKei3GtAza2nNUKy6zs3WGh/Mws8ArTo43oi7UrU6gNJ1T
      YhiAzUhnvpGmrz1gY72BJpsupO/yU0WLQStxdzRlo0REsWCTSicGmLR+CFRgExvu42MAsZCs
      +CZFPcT3BGvrJf7ydAklTVy3juPYVDYbRFGE4zjUGw0s06TRiIjjiEJxR8NLCEiZglRXD6mR
      o+htXXe++O55bK6jdx3Cv/gWapd/vwV76BhduTbCjWU2lxfwVBKgKQW1SBC+8Vdkewawjzyz
      x4AydqKaFUWJRKhAce3yDRp1lzhbYDYuIHs0rnouZ9+cQ8vmqISSUDSDbyJK169Rv3oeraMP
      I18kimPsXJbK7Czl1TK7PeKtLLdC4IXghQLvW9/EdGxyx05id/ehZfKEaPZpdQAAIABJREFU
      yzPEYYTZP0w4P0np0gVK65ucbcZb716/zC9/xqerM4fru8zOVDh+opMoksTKoFjUmZ4uk8vm
      aNNXWHFtxtVe6aqtL8XdtZN/a72PL3csk7brNOo1FpaSpNjz2eQoOFnCNCCmrd1hZbmKijTi
      OEbXNYrFNATG42MAAJEBphkTeJJKtcJ6mHz5lmVSq9WQWiIT1Gg0CIMAXdcRErRmUipu8m04
      wqf7819OMsQ/JkpnXscTOpEQmPMT2EPH3vcevdiJXuxEajr12WtUlSSSBghwNRtvdZXU+vfJ
      j55E7+hDKUVWBiige7ifU//4FnE6T+7QADaSKAzwa3VWajr1pQUYfAa9scH69CWkUmTbi7S9
      +DKyo49obYHVH/wl3vICdZneU+KxVUkqaK7+Ny3EXqThVQNq755BqlMk8tVJr4Qe/x2htpts
      OBlvM9D567cm+R9+9VVyOFi5LAtzmwwNFbBsB01ZtBUcpAzwfMULzhyT1XSzd3svbCI6zYCV
      wASlEOhkUimyqSQLH4QKbVvEL94umBBI2tsyGFqiDrm0XEETOpaeeowMQCmcwKcRJ+LMNVdt
      MyRbtoFl67iNAMdJjGIrmbWVUEqcH4VOSNfHP3VPDz+A3TVAbWMNlEqEOe4Ac+gYRvcg2pX3
      2KgnQaAQinzKIahVWLlwivaTYHb0Uq669AO+62F09+F0tBPHiuW5FeIoxog9auYg8unPgIAg
      CrCGjlIcP4MyNDZf/2tU9wjxxiIVTyMW6b0dM+w88FsawkkDSbxDq9h8PVYQoxOLrQhJEMoU
      Kgapqe2M9JZOWjFvE8cBAp1T4TBdqSl8P0SKmFiZaJoNmAjhkbMkPxGscCrqpHxTcuzpdJ2f
      LJR2fecCiQ0IIlFHSUWsTKTQUEqiixQhtaQ8Q8VoIsnGFQspalUfp5B+fE6BClpA1gjRNIVp
      h6yUGgjZDG5V8nCnUjvuiGzW+0sZEyu1fXjUfvgwevfeQrG4tkm4Mk+4uoB76Z07zkO3U9vF
      +bf0ZW+CsFOkjz1PIZtFBB661yD7zCu0v/pFMp29eEuzIART6aMszK4wfmkSq9nKCAKlGZS6
      PsLipgA7BbpBePFHxEFAffo6q1GG1aUSq3Wd1YkZNsr+9rwS2kRBGEBpo0YUiiSZJpITs3rd
      B7RmVrgprIdECrGH8nwrgy62Ey87dUlxDFfm6nz9W2e4emOBj9szpPDQdEUYSgQJCZdpaEmD
      vG/y/aD3fQ8/wHjD4e9KBd4oNw8khCImaJ7sJNWdrh8RhjFhGBMEgjg0m9xCCiViFDGmqVGv
      uwlj9Ad+Q48IjjmbICCKBG+/NcWPxjfZ0pndkupUbPHmyObfk/8KEh5925Bknnpxz7ixW2P5
      e98mihR9//yX0Ip3rl6Mt7tlFIZ1d4xn0k6Re/pl/B99Fz8McRemcPpHyJ78KCps0hOGEWfe
      Osvwq883V+2k5LizJ095cQH53E8mlw0DtOGnEJkC6p0fkjYE1URHAtTuUunmtaVAM5Oybc/z
      iGOTer2BlIIgCImiiEajga4n2mS6rpFKWTvHuTTjBbFzuiLEdjSFEFCPdM7O+3RnppAoisUU
      m2WXalWnu9MiqHvEClIZg+X4/XVBW9iMda66aT6ddvEjA1MLUGKnKUcp0PQQqe0+37EhimgE
      HqgYQ9MQwmCgr4uVlfLjsQOkiHjOLGFZCseWHD/ai7erCXtvO+Kun7O1siWroa5rO4owgUdU
      LSHtNJ2f/iIdr3wKoZt3PEYEiDcWEVFImmibcPduke7oIdJNSuOnd+aoJ0Ysi12Ez/40a2s+
      YTXpilIxqChCXXuXcO4acX0ToRvIXDtqY4me7jRmUwNgTyunENsUjCre6qSSSCmp1+tIKclk
      UpimkTxUmk46naLRcHEce6dLTglilZQlJwwWSY/ANlPDrvv+dLfiCz/9FG1tKZTSsW0Nz60j
      COnuzoCK8WOby/6tWyG3UA4lpqZISwddpZuBuiLCI4h9pB4S4+35jKmlcPQUlkwjwyxS2Ug0
      ujsLj4cBpPWIWOh4niDwJRKboqOzJdd5M9dMwsccN6sFd7S3ao2A2uXk4QsWZ4hrSQGaVujA
      6h26q7nYx16kY3CEto9/AZm+xWnGHaCbFobfoHjoCOoWFqt19LHu6qzNLLFFjeJurEPoYTVW
      wfeI1haS37XYgzf6cezubiQ7ge4WydV2v3HTt0+nHRzHoljMkculEUKQzabIZlO0t+cxDJ1c
      Lpvcvd3GRFKXtLsBZiuN0YgklUjDU4L5Uohh6nR1Z0ilkiaaoeEcXb0OofKouVWm6yFL4Qc0
      2gr489JOsB2LgEg0iEWAEhExAbfK7wplYEgL09CJQrV9fx8LF2glNPnWZi9fSM9RsAI2y1UW
      qxFqV4PKzU3pO3+K7dez+TTOUFItaQ4eYbc+wN1COmnsoeN3fpNSqCZdO0C0Og+6yeb8FHY6
      iz36zG0/Gm8s0ejuYWNuibBeQ7Mdhj/2HBtTM2yuSBh7KbnE1AWCifPUlzcQ2MQ31d1vKfGq
      OPGNtlshmmUaWyxxCWNe4spYlvH+xURt+TvNhKFqKsA06VxCBHmpqLgxy0tlUh19dHRKIHF1
      wshHSsmhQxnOTJWJ7b2aZLdCV5NyJSYgEi6KkGo1JAo1DN0ll06+bNl0gRM6douIEEWANEyC
      UE/kU+/8TT06WAlMcmaAroPt6LQZPsuRsaf0YC/ULtYFgRYFtL/8aaSzS0BNPPgN0psepzJ1
      FSXALHQSeQ38ahlHhShpkHvuJ+74eZnOEqY7MYM6uUP9rK1VmXnvPLnebsK1JVDvoo09j+gf
      w+weIjtxGffyOK4X3+LhTTLeiRuRKC5uLRQ7sYIg3qJgaBrCltuUjLFFvLuli7albxbjSEjL
      JG8hiUmnbd6utHNUuQynNtnafRtuiK5Df7uESgjyA7jPRbKLe1Gd1fV6U3BDkHZMNsseteoa
      uVyGtGOx5SBh1AkCA82IEg/AqNOIosfHACRsi0784K1pVuL0rge/ucoj2OH7b/rBMdgmZPt6
      tjue9hNaJo/QDdwY3GqlOXdB9mOfuyuXSRt+mmhzg8hIIy2TQs4k7upmVXRAt47ItRHeOIt+
      6ATx2iKGVBiaYKdMcAtqx0ffDlzV9v8334FSSR8DzRxB8vMdJffdemiquRNsnRopYlQsEmdT
      Ovzw7WnGPjHI2+U8I6kqigghwHEkQSBxRIUhbZVpblMYtz3ziEa8ztJqiZ7eLFEESnpoQsNx
      MnhuwNzsOpatkcs7ZLOJWxUJr6nCmbhO6OHjYwAKmPcz5GVI0DFIfmGacsWDZpJrT23/9ocE
      jiXo/el/9r6M7Y91YQFCqe3jRalinnLqdBohp2pZyvFOTkFv66b9lc/jzU+yeeMintATxoXg
      7orVRCqHlsqxsdggG0dolklZpRFtPcmOJSVC01FeHa1/lGh5hsJgA+/yODGSJvVWc2XYypUk
      wh67K8BVM7iMo63M6o5VSCHZLbixBQsfS0bECk4M5YijgOeOtXF9rs7GRp0L46t88jMNZrQ0
      9UBiiGhbTjWhOknzxeI8se1yqtLGe7fhBpqta5T0Kt09KQQ6gQ+WE26f7pmWwcChdoTwWVqq
      4Pse7e25ZnlHs0cABSJ6vGVSN9/5R1bnltha9ywJlmMQ+j5CamiZHOnB4W2//3ZIqZAiHkXd
      I2+HhLHgipdnxKkxolWoCoNDmseEa2PENVJxSH/OwXUVp7wCjiV4vZoj2lxHy+1tR6xdO0dj
      +gptr37pAzvX9mBjERav05aK2CRLOPQ88cYycXmFuFJCZgvI7iFUvUowfopoc4MgllQqLg1f
      gtAQBHQfGcKt1tlcWCIS1lYOFwBTjzEdB7dSpzg8QGligu68SaUR8fKJNoJQ8falNdK2znNj
      HXz+1TFyuTQRAYuLm+SLTsLrH4Hb8NGNGN9XtBWdbR0x30uOLk1TJ44iGg1JOpOc05/ZTHEh
      6GGTFAJBl+FzxGmw6mt8qX0ezw8wDRsNLRHuBjQtJlSJK5zEMRGlzRJhYKBpkmzORDd2FsLH
      2gDiapn5736bEI2Oo2M4I8fR0u9Xhr8ZOXxeKZSwAx+px+TjEE2E6HpSIKOIESrpyNKEgYoF
      pinwg4i5hWUO9fcgReILV3zJd7zuJH1/G9wsRn23UComXp0nXriB8ZFPNYPrGFUrJ5WoUYjM
      FolW55HVNWIzhWjrZf7b36ThRaQdQe+//G8QUiNcmWX6e39DqJJyEcdQDPzMzyPSeeKNZdbP
      vYtcmeF//vc/uX0C1WhALmVBlAh2GLqk3vDYrNbo6EiBjIiFn7RDKggjxcpSiYFDRcIgOYFK
      dAwTPTEhFPV6jGUlpL31agOp+ayHNhndJ5+y0A2dODQT+aY4IOVkm+2QAj8M0A1FyF7BvRif
      WMXUqgGGaWDvonB8bFygW0Fm8vR+9otEsxOYT3/sA99vE3HErvPJzHxyni1AbwpaKwW+JxCa
      QpMCTSZCcFEUIzWFHyWMaPm8hWEoojgGEdPQTFZ8Y0/JwW5EE+fQRm5/6nMnCCHROgcQdnrb
      iISmIW7aZUQ6h15bJiz2IOwU/b/wK8SNKlq+ffs9eucAhz7/M7gL01i5HHrvCMJIfGetvQdH
      E/yLnzpJHBoYtk/omqTNpsa8spKYIEryEm3ZIroQzfgBwEdoEX5DkM07LC7UsSxBW7tDHIMu
      BL4HhikwDA2tSXuuG4JYpelOQRRp1OsB6bQNhDhaBtNMI5u0cgkBWJz8e/O9FgopBKapUSqF
      2D1Jrsf3H6Mg+Hb45KDFyeM9fH0pbjIN3AJK8aX0Cj26i6V7SAlRHKPpinpDkE5pqBhMS2Ga
      gjBItlzbiUE0cBsSoSRICKMYN/AIAsjmIOdHfDa1zPcbt2bNlkO37ir7cSCzRbhxGkw70Qtr
      702OWIVANarEc9eIjjy3bYPCtNBuUXevt/eQae/ZOS/eOSXmyz/7IkNagzAKwCdZdSMDTRiE
      cYxpSMIoBiRBEOPYqYT7xwWlJ3GG5QSYhkk+L5icKNPW7mwn5GK1Q5QbReB5Ak1zsAV4vo/U
      LDQpiWoxtp3G0vfu5Ht20C3en63XlIkixDAV62sVLMuhULQobXiPtwEIpThhVsjqDX6xc5ob
      bhZbRbhIvLrHYpTFNAQfTVfoFC5hHCG1OOmusjUQMZoeokIN00o45QGIJaZm0Kj5CD1AN5Ij
      RKNJ+W0l9Vm4DTANxZDmcruGp93NL/f1u+bakNU1irKCun6Z0koJhp6BnlG00bvrZShIn+ed
      Mh2xzxWV46y785At+yajWRfDUIm7g0mi97XzoOmaJAhCctkUYRQTxwpTNwnw0aWg5sfEekij
      KpCatkeUQ5MJuW3gJ65ROq0IXAtD2mimBBUk3b+mia6/X0PAD2KIbRQRhm7g+ZUmt5KBEoky
      ZWnd49iJPHGsmJyo0N39OFWD3gJHnAY5PSJ0LdqFomCvEqmkYM7I60CZmZlNBrqzuK5ICJsM
      CcHOahKFGpbJdn1LFIFAw9FtHMOm4Rq41cRwHN1GhT6Ba6BrybmJbij+eu3HK4m4F6iOQwSp
      IutCogoR4mh2u7T5bpHVY7xI8U6QZyJM73Hb6n7E0som3T0WpkihSQ2tabxbD3sioBFjGBph
      mGTZDV2iCQvX99Gw8V2P+cU1xsbaktOfKCG33V1pqksIgoQ8y5QWlzc1RjIW9m3WiiBMEmOW
      qeH7Ak0KHMNISjTwiJQgwsf3mnrOUjA0nMX3HqNE2K3wdCrh+4ljQcrRiAEvTDgsFTFKhNi2
      xA+a7RMaBF5SExP4MbFKVvUgEBiahqkLPBdydgbXFZi6xNINJDFSCuZnNuju6MXUNNwgxI1i
      /qpUYNo/GB5tmUpW7B8/nE4w49vM0Czg210mrRQnsx5qM8CkE0PYe17XNUnDDahW65iWQRzD
      f/nLv6G9rY1MvoiIfVJpk7X1Mi98bJhsJvm8rgN6chK0lZPYLtkAwjik6m1Si9upRJKzp9/j
      2WdOAoIwCpsFfAEp28DQBWGYuGJBFBDGjWbFL0jNol6LsAwHlASR7Ni29Ri1RN6MV9Iljjgu
      QQCWnRRLKRESqRB8HV3X0ISBBjh6CqFLfD8JLG1TEEaKUPnoEiyRIgplonkrZTPlnujsun5E
      ytap1T3q6QLfraQYtSKOOQrDMlmumHt86UcRY06DdFiiFkEYSJSMtn1uKQSVap0wiujsSBJ5
      sYJGw6W8WcZIZzn97hm6O9tIp9MY0kYoHd/VkBKCIIm1dE3ieck2q1RyiBXHEVEkeCq1Ttpu
      563VNf7P3/4qL7/8Mt/727/l+eeeZ2lpkf/+v/13xFGw3YZg6gaSRJdAqcR19Ws2PR0FAlUh
      bvqjtydUeVShYMyp82K6RrfWIIgi3DDE1GKE9BBCEvghhmkhozSaFpFNCdy6IpVKXJ0wVKAk
      hhTISEcEBoZuYugQhDFG81S34UZYptx+ENIpC2ezhGlmQGvWwoQR/76jxBXf4tvlH+OM/0OG
      jlqJ9bDGYG8Htqlvl4i4rs/C6iY93QVMY+dREgKee/YZCvksi4vLPHXsCHbK4uLFKxB/jJSZ
      pbxRpr3LQipFkoOMsDWTKEzcHxSYmoVpa7huHc+vkc3leOXjL+G6LidPnKS7p5uuzh33UtcE
      QRgjhcDQHUJAyQCIsS3BwlyNjh4bhEBqMZ4fP155gC93rDJgNhLKEV8Ra41tUWVEgK4ZxFGE
      ThpN6kmiREWsrlbp6sqyJRBta5ntrKIfJJnQoPlnGMUIBIYht6nAlUpa8cqbdcIwpL0tadio
      uyGyWT9zed1nxmrjbN3Y3gzupmHmdrBETFaGrEb3mMG+S8jA52eCS2QcSVuHhaVbGMKmvOFj
      GDp+ENL5AdJYURRT9Wo03IBi3kHDYnp+gUwhJJVJWCwiXIg1DN3c1gc2hI1QGho2ihhdJAV0
      UbxTsCebx6274QeJKxQTJuxwSrGwuEJ/zwB+XMHzYwwTIj5EzHB5GVOO5D27Cp9Nlegz6rh+
      iNAipNQxNaNZJhtimRpxBFGsYVkxkhihDKSM0XSJ6wZYloEWpxHaTrS11TVomlpzZUmO+baq
      AKQUSS8qCQvx0kqJIEy+EE2K5Lqxolv6fKRQ5yUzxpQ+4LEuHU5VMlz173536DR8PpqucNyq
      gZKUlMO31ops7BMJ8XGzRt7QCSJFGMYoVWNts0pvRze6NFhZ27zj54Mwbi4QgkwWvLiKbXoM
      DGZZW6+zutSgrc0iCjU00yWKI3wvyStE+FiahRA+GimCMEwefMF27+8ty8Y1QRTFaFozyBDQ
      29lLqVyjUEhhOBECjRhv7w7wg2szD/TmSTvHZnQwzu9HUjUc4SO1CAXEoUwYwaTC80JMI2nT
      CwMNo0mFIpVFLDxqdT8RvYt1LHPvjnUrsYebfxarJNGy9Vql1iCf3XmowzBiY7NOIdesNBUR
      ijgp3oslMSZv1j44UBYoXshUE2WWOKnpkQJmPZ0Jf3/WsiE2ySoPXTfwAxfLMEildaQyAcFm
      pUHKMdH12+/0YaQIoxCph4RRjGE0gyKlI1DUGwGObSK0gCB0iWOJoetIKYljiS41pDKbGmQ7
      9/1OGfSEE3Xva/WGT8rZ2TGVUnsNoIUWnjQ8Fh1hLbRwr2gZQAtPNFoG0MITjZYBtPBEo2UA
      LTzR2GMA1ZVpxqdXtv/+7runbvmh6fEzbLjNv7gbnBmfvusLnjl79sef5QfA3ZjfM+/deOP1
      N36MkULeeOPNO77j7//qP/Paa6/x2muv8fqpi2zM32B6pbr9+bNnLv4Y12vhYeMmA5jh6szO
      g/Tee4kBhF6d0++9R7nmEfs1vv/d7/D6m6e4NjnLlbNv8Z3vfp9TZy4A0KhscPrMOfxmz1tp
      dZF33ztDzQ2Yn77Bd/7yO5w6dYpKY4e5qlpa5b3T5/CCpFdz4uolbswsbI9XriX9sktLiaTR
      4tISy/PTXLo6AcDZt37Ad7//j5y5cAXCBotrZZbnp9moNBgdHU0uomIunz/L8nqSuIlDj7On
      32V2cXXXHdAZHR3avtb89HWuTszuuWHXZtf4yle+wle+8hU+8eJJSgsTzOwygHNnWwbwKOF9
      LtDE1cucOnWKU6dO0QiAyOX/+u3fxfV9/vCrv8VqLbzFMAmCyjJf+6P/hFcv87X/8A3w1vna
      H/0pUdDgvbO3LrMoLVzla//xP+O7Fa5NzfHX/9+fcH5ikYtvfo/v/MN7LI6/y/mpROHje9/7
      GwC+/tpv8aPTl7nww+/w9rWbVv7qIr/91df42zfeSz7zN98D4E+/8X+zsFHjz7/5R0yt1fl/
      v/4fqLghp995h90UtlvXeO23/ndOX57ih9/5JtdWdor5vVpp+/7Mr2zc+e628KHHB6YP1ybO
      MvbKz/Lxl49zrFPjR5cXGRsZoO/ZFxkpAIWAgZUMLz77FOf+4duUGj5nzl3k6oUb1M0v050V
      vPnWKT71+X9G36FDDAwM8uKLO/ybb//jm/zKb/4G3VaStTv1TzG/9i8TnstvfONP4Pj7O6l6
      Dp/gn3/p8yxeTHOhXOXFo8dYyTg8+9QxKE3QPnCUX/7Fn9/1iYAzp88xWI8JG5u89e5Fxg4P
      86N33qJ76Pgtb8LhE8/zpc9/lovpBuWqB52356xs4dHF+777kbHjvPjiSQBOnz5Fpr2L1dPj
      wHGmJmdoG3iVaEMShgFggJBEQZN2uljgpU8d54svH8VzXbQw5pf+3X+HqSl+//f/kI8c/fWm
      wMMOOruyTE4t0X20JylG8zyCWCG8Mm6UqB5GUQQqptHwuBWEFAThzs7U0XFzA4rO0PFn+PXf
      +A0ECtf1UAo+9ukv8g/f/mOuLLkc7747IlsrXdhjwKVGBz98b5xPnOxhY+YqZO9MntvChwt7
      DMBM52iLdpjRenp6sYrDjOTO8NXf+z3yXUN8+bPd1Ns/ze//x9/hxPOv8vlPvYCx+hd87Rur
      /Oav/AJv/z9f5/dO/x1mppNf/Vef4xtf/0OCWHH8+U8AMNKZ4auvfY2f/zf/lt6CzXOf/ln+
      9Btf58wPAl7+9Bf4uS98it//6u+ihMYv/sqvUdTr/PkffINr7+TATurNu7u6t+db1GzyAydZ
      /YvX+MbqDP/VF16gu22nOrG7uwsQfPKjJ/md3/lddE3jp37uXzF3/odcmlrEcNp5tWvn4e/q
      7t7zZzrXhmbv3Ka05vPaa68B8NSLP8EnXvwI3e99k9/76mso3eLf/tqvPrAvp4X9R6sWqIUn
      Gq08QAtPNFoG0MITjZYBtPBE44k2gHq9/rCn0MJDxhNtADcfybbw5OGJNoAWWmgZQAtPNFoG
      0MITjT2Z4Eql8rDm8VCwn0FwHMfIB0R82xp7/8bf90xwtbzO2XMXKXT3cXzs8Pu2nKtXrzA2
      dmw/p3Bb/I//x58xtXob2uYWngjcohCyyt//7Tn6Rvro7+kklUpRrdWQAmr1Bo4hqXiKrrzD
      4uoGmXw7GQtmFtYYOtT/Pl6rTL6N9kKRkbHDXL9ylbFjQ1w4P8Ha8iRDx54n8mqcu3QVW3j4
      gU8qncfXsoTVFZ566v6581to4U647X4hpWR2LmkGmZiY5Ny776BZDjem5lCbi0zPTOLqBaYn
      rnHx0hU685Lr06u3G24XEqm67sHDDPV3sTg/SyqTo1Quo5sprHSRuLaEbtxddWYLLdwPbtkP
      0DcwzOhwL+NXLuO5NRp+SFtXL21Zh939UZZl0RCCeqXM5KxGoePW8pbtXZ1oQFsxw/j4JMWO
      diwj2SueefFVPNdj7MgRFldKpNMOtWWfjpGTD/p3fR9Gegtksx+sGXYvuFfdr9bYBzv+LWKA
      iOtXrhEbNocHupheWKOzvYiUInGHyutUPEU2WuXims7TRw5hypDJ6QWGD4+gy/v8BeOA61ML
      jI4cur9x7gKVSmXfDCAME/761tgHM/a9jn/PQXDk1Qn1FNYHkD9HXpUL41M46Sxjh9//UMeB
      Sz3SyNjvl73Zb7SC4McXf/a/ffmu3nfP5qhZKe6G+DwOPaoNj+HDo1y+cAapm8RairytmJld
      4fmnB5irZFm7/jpCS/HSKy/d1bgttPAgsO+JMD3Vxisfe47LF8+hmTZHjx1HhC5Ly8uE1Rpb
      TY4d3X30thdpVee0cJDYd32A0K1ybXKOzp5+3PIyVy5fpmfwMBuLU5h6BtPM0J4xEWY7Ghzo
      6t8Kgh+fse91/ANtiVxbW6W9ff8VE+8WrSD48Rn7Xsc/EIWYiYkboAQjh0d2/dTn6vg8Y0eH
      D2IKt8T/9LXvt4LgA8bTI138r7/52Yc9jW0ciAHU6jVW5+eRloMjQ2ZnZhl7/gVQIefOXyKl
      xfQfPYmtPcJSii08kjiwatDO3n6G+ntYXlpGhFWqHiB0DA0Cqbce/hYeCg5kB+jq7MKUMDW7
      SKGQp2bqZEwNs71AKlZcq2UOYhrvQysIPvixR3oL+zL2veKh8wJN3LjOoZFRHsYG0AqCH5+x
      73X8AzCABm+9cZGuwV6GB29dK/Sw0MoEP1h8UID7YTSAA3CBIhoNHyEl7779T5jZTrryNrMz
      swwN9XBxtk5Kj2lP6zQChW1Z1BoNrFSOsZHB/Z9eC080DiQI7hsYZqi/h3Shg6ePH9kJhF0Y
      HD5C1rFohIoTJ05Q29zA0HW0fewcaqGFLRzADmDS1p4Eue1tbQDbgXA+XwBTI2pvw9YFly5f
      Zmh0jJnZeQrpu1dPv1e0guAHO/aHLcC9Gzz0IPhhohUEPz5j3+v4+78DBJtMLAaMdMCNssHh
      noS6PHCrRFqK+dkpDo+MvO9jW73CszOzpAxF7BSwNINs5vadYuNXxzk6dvSup/a4ZYL/l9/4
      LM8c7nrY03iksP8GoAJqdR8iqLk+P/zBGbRUimcGM6xpfYyPj5PP2FybXMCybYopjUYoaEqM
      sTAziZFt57lnily9ssHFtetoQmP05BjXbywQRRF97WmqviKMYs4rSPG0AAAKXElEQVSceos4
      ht7uHJMljaC8iKaZvPTqyweT9GjhkcL+R5rSgDjA93xM06C7b5D2YuJ2mKksA/0DpIVLI9bR
      NI1GCMePjWE2n9ZCeycqcImbjlqxo5uR3nZWFjcYPnmSYi5NzY85cewolqEwUwWO9BdZrwYM
      HR6jp7ubvo424n3/RVt4FLH/i6KeI2stcW0Fjh8bYGNdByJMU5ExIUhb1I1OBgouwkrTkTW5
      Mn6NXKEdgLb2DoYPGaxueEkwLUwcDQbSeaavXmGtUucjR4e4PH6VXL4D5VWZr8PoYC++CWb7
      7cusH7cgOP0QuuoedTyyQXDsNxifmCabb6O/5950uVpB8OMz9r2Ov/8GsCcIVkSb1duUQMdU
      KnWy2YOrC3qcMsEPqsz4STOAAw6CQWtUuHD5OnF9ncjMMtiVZ3F2ho6x59lcnGP84hqGJugc
      OsL01Dy2bfHs08f3fZotPJk48CB4YW6GdC6PnS7w3NPHWV5eQhMhpWrSHZwrdnB8pJfVxUUC
      aaBrrRb5FvYPBx4Ed1iv4ro1su1bWeECtZpJodkXDALN0Rgc7cOevoae2r+M8OMUBD+KWdgP
      Ax7ZIPhB4MyVaeQ+UTDGcYSU+7N73Wrskd4CGce877FbMcCDRuzz7rvnSGfS9A0dJqyto8ws
      ti6o1eukHZuVlVWy2RToKRwtYmF1k5HhPtaWVgmEQTZlkslkqFVrpDPpD77mXeIP/uK9xyYI
      bmWB7w37bgC1lSkKw0+hbVynXi2xuFxHU6uIyCPbOcjS3HVGR7q4OOOS1tbp6+6gujLBNVOn
      PFcmk1X4pZi4/xBzC+ucGHtwBtBCC/seBDuFbtbnJunvzLFcqrMwO4UbKkwny6G+Liw7hWOb
      ZNNppCaZnJ5jeHiQyPfJ5/JommToyBHe/Ic3GD4AvtAWnizs+w4grRwnRiImVzc5OTpEf8HC
      Uyb5jANA/2A/6AYDPUDsoEKPSiPgUE8OYgHkQZp09/fi6A82qPzsCyM0okdPDeVWY3cVWzvj
      veCRCIKr5XUwMw8kyNuND2sQnLYNDvcVb/v6oxqoPplBcFNxxkkJnnn545Tmp8i096DFwQcG
      vzk9hGwn5XKZVMGCB2wAH9Yg+MNGHvU448D6DnVdpzR7g9BpY+LqFW5cu05Xm8XEosvywixB
      ECTB7/wyk9MblNeXcDdLuEoRhhFnzpw5qKm28AThQAygp6eHWIg9FZl3E/wCRJUlNlWGjNOS
      TGrhweMAXCCHwZE+bLOXqgtRaYmRsWNoKvrA4NeQgOngVyfJHL37Tq+7xYc1CO4qtALag8Ij
      EQTvFx5mENxVTNN9jyc3j2qg+mQGwTdlgmVYxw0lyqtgZttJmzsSq+vLCygzg6k8PGXS2Zbb
      16k9zCD4y597ml/+3NMP5dot7GDfY4CtTLCtRdS9kLfefBNTVVmqa3skVq9cvMhSVZB1BBPT
      S6zMT7fUYlrYdxxwJrjBwNAwti6ZnbpBqCSNapnJ2TVsW2OrwHF5YRbXDVt9vC3sOw42Ezzc
      huc6GKkULxwPUWaGtuwIk9MLDAyPUF5dpOrCSy+9QMVT7HeH68MMgp8eaRWufRjw0ILger1O
      6g61/h/0+oPAwwqC77d0+VENVJ/MIHh3Jvilj7E0NUX/0Agzc3OMHhpgciYR2K6V1yjXAg4N
      9LI0P83k4gYvv/Dsvs7sYQXBrdLlDw8OjCtKSsn1y5cZGR3l8qVLmJZBGAZEfpXzl64RumU6
      UxnmF3wis0guVT+oqbXwBOPA2KE/+vJLWDdd7fqNSfoHh9FkRDaXx5QaQRCi6Rqu5x/E1Fp4
      wnEgmeD+wSScHTt+nMmJKY6fOEHgNTCkYmGtwuhQUuevAXrKYXF6iqGRw/s+s4cVBLdKlz88
      aGWC7zMIvl3p8qMaTD6qY9/r+AcSBF+9UmFsxOT8hM/hwTwohaYJSuUyppMn52hMTs/TN9BP
      ZX15u/bfb9RQpkMxm6Faq5FJP9iV80EEwa3S5UcbBxIEz89OEocGsd7P7NwsygvIZXTcdC8b
      81PMhwFHjx9i4voaaSfg4qUzHOptQ3eKhLUlzENdLKwLxh6wAbTQwoEFwcfGRpBAFMVUKpuA
      IJfPITUNEISeR4zH6rpLMZcG3WZ0eICxI0P8wxsXGDl0b/yfLbRwJxxcEKxLRgZj6uWYQrGD
      tnwKqYPTP0Do1ZmZmcFIDVHISDSnb5vpWJpp+ns7ecDtwMCDCYJbpcuPNg7AADRSqSQjmk5B
      OtUPJJleS4KRSlENXHSnk5FDbQja9ny6vLHG2PET+zKzkd7CfQXB91PS3MKHAweWCU47IWMf
      /ST15Snynf3MzcwxOnqIG5MzDA4fpsewWF1dI51ykLHCSNtM35igZ3AYx9wfhrX7DYJbJc2P
      Pg4sE+xGEnfxOkGqixvXrmDpJmEYEkc+Z89fIthc5qkXXmFmbgbL9ZF5i6qwII4OcpotPGHY
      82RVKpV9uESDrt5e2tMNbsxvEIgNirk8YRRy/dp1OvuHCBfmEB09SBUQhSFBHJErdNFeXuPq
      jUlGPmQK8y08PniiE2H7qRATRRHaPlG7t8Z+cOO35Nj3CfvFCtca+8GO3zKAfcJ+aQO0xn6w
      4z/xBjB94yrXJ2ce2HhXLp7l+uQMkV/n4oULrJSq9z+oUkyOn6Pig1vZ4ML5C5TrPsvzM1y8
      fPW+W0fXluaZX16jvF7m0pUrrJYqD2zsqRtXuXhpnCgOuHzxIvPLa9TLa1y4cIGqG97X2CuL
      c1y+dJFyzePalYtcuT6JinwuXbzA4krprsZ4sg3AL1EObKiVqT+IBuS4zuzcOsVikfHx6xw9
      +RRLs5MPYNwAx5BUfbg6OcfJp08yc+MqS2tlRrstrs2V72t4O5OnVl5l1YvQNINCLvOAxlb0
      DgyTkXXOnb1C9+gx1pcXuD69wFMnjzN5bfy+5p1v62R4sJu5uXlmZ+doKxa5MT7O0NGTrC7N
      3tUYT7YBRAFStzCkIHwQBiBTfO6nP83UtXFCIdAE8CB2fc0kbScHdlIKkn9ASIFhWoT32TuR
      btZYjfa2MTrUx/lzFx/Q2ILZyXHiVA85U2AZWjJ3KUBowP2dv5TXFhmfXufE0RE+87mfZm3q
      GqVQYP4YN/7JNgCnA1Gfp6R0cg8g1RC4VS5dvoJmpzjc18W58xfIFu6/9THy6kzMrzE/dYOu
      9jznz5+nraeflKlx7uoio0Md9zX+5PUrrK6usby0xLXrE7R1dT2gsSOWljfw6mW6BvsZP3ce
      K52jq5jlwoVzdPXdn97D/MIilhazsbbGxUuXcTWbpw/3cf7ceVLZu9NMax2D7tMxaAuPBp7s
      HaCFJx4tA2jhiUbLAFp4otGqMnss4fL11/6YBvATP/VznDx877VU1ZVploPsHSWbHmW0guDH
      NQguTfD11+f5pU8d5Q/++JuMfuTjeEtXmJpbJl1oo71vFFWaZHZhjZ/717/C3377P9E+eBK9
      PkuUH8GoTjOxASfbPP7q9DL/4vMf59BHPs35H30XvE3KUZ6CKHFlvs5v/uZ/jfmI+hL/P31Q
      ZkrfpTk/AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAdy0lEQVR4nO2d2XNcx5Wnv8y71IoCQIA7KVIbKVISJZmSd7Xa9kx7m+52tMcR0xETMzEP
      0//MvEzEvMzTvM7iaY+7vXW3Q5bV1r6wZa0WJXEHSOyo/W6ZZx5uASAI0pQogEBV5RfBCFbV
      rUJW3fxlnnPy5EklIkIfUq/XGR0d3e5mOPocvd0NcDi2EycAx1DjBOAYapwAHEONE4BjqHEC
      cAw1TgCOocYJwDHUOAE4hhonAMdQ47dare1uwx2Rpin92nbHzsEvlUrb3YY74p3FLr+eTjf9
      cyd1yiPVNr5SaArsCjV7Q7vpf6dfEGuJ4g71zOPHs0VM4KO8YLubtWn4nudtdxvuiEwULbv5
      Ftzxcsw77RJN46NQPFIV9hf6Ml9wAyKCiEUpjVJqw+tpmmBMBghhWAQUcdwhzgzLUqThV0AB
      AzQe+NvdgB2FCCIZP9wziybAkxKBVyW/6/2NiJCmMWkaUy7XbnpNEIRorcmyBK094riDsRm/
      rpf40FZRA+gxOgHcgBIAwZMCgVe56UjZj4hYjEkpFvPvlGUJK5nwvh9iTIrWHsZkrCTIGyv8
      dD7kvC2j/AHs/Qy5ACb9hIqXMhWVyJQGFKJB4aEJUX085OWmDHhefou19nqdf+07JUmEUhrf
      D0nThCAIsdZwtmV562pCKQg4TxW8/v0dbsdQC0AreKy6xL1hmxcbk/jaUtQGLQW0Dre7eXdE
      bucL7TiimwkT5SK+nzut13d+z/MpFMporRERWpmQpTEX2vD7rMYsPsr6A2n2XM/QCmDEywjE
      ooHHR+cY8btMBIbxwKCkgupju9+YlCu2wm8Xhf9c2hgpi+MOK36NMXAlEv5usUZLBSidB0VU
      f8ZGPjNDK4CHim1OVhYZDbsIhvsrHRQaJf095CmlCIICD6qU5ULK1Y4w4UeUSiNonX+3d9oh
      b3ZKPFbqcD4r8UnsI14/S/7O6e+7/Tm4kBQ40xhHYclHw/z2i7JkqouRZFvb93nRSnGoAj+p
      j9NRJcRmzHQN5zuWN1plZo3Hr1s1Po4DZCi7fs5wzgACe4OIb+26higLN4z6QkZGB20DtO4/
      W0BE0FoThkWa4vF/lqrsCSxTsUdz5bsOb59fx3AKQMFcUmBtRUdteN1IhJECSsp9FQoVEaKo
      jbWGj6NRULBoPBZN/wn5bjCUAnio2MhHfyyIQuFtcHqFjJQmPiX6ZbgUsXSjLu834KXOKE2v
      uN1N2vEMpQDK1hBokwsAEFKEXAj5YwMKtASItag+iYNba1mILb/q7EL0RlE7NjKUAjhW7a49
      UAACyKogWHmqD/mXug+e77r+p6Q/hrZNZqKQ5iFPQhCvbzv7zUgL/Zndu10M5QywMtIrFAof
      i7nhAoUiyE2iPnGAO50miIC6eaKb4+YMpQBaFgrrgiLe6gKYkKHwUaLxpIjSO3eStNaspjZH
      RphOfS6mhe1uVl+xc+/uFvKzuYPU07VNHRq/ZxLpPAkODQhW7ezFsCSJEclns3Md+Nu5gPYW
      7JEYZIby11qyIZG9ja2sIFMdjI3vTqPugGKxvJrCbLIUFbiw52dlKE0gLYLw6bZTisq2uDWf
      DxFLHHd4w+wFbyhv5+diKH+xw4WYXX6CEh+NDygEgyW5yZpXnl68HavBcdxZTW9WSqG1RxgW
      e1sXU4KggBU40ymwjL89K9YCI55FKWiYz2FQWJjQMcsEmLtomAylCVT2DAWt8CTElypFbzeh
      GsOnvO46JR5it28DrNY+xqR8UM+w1qzmJYkYLneFf5hX/GIWftOqYrcp8n8wzPhPe5b4m91N
      jhY+X5GCvz5wkQmv53dZ7kp4eihnAABNgFIBviqiAE8V8ufs+ooHvq5uTwPJI7A/rY9hxOdU
      0F7d3QXwQVrj91Ee8dmuTSvKClOpxwddxeOVJv9uF/zXqzWiW4hxt5/QTD2i6zcbSJ6Lui+M
      0Er43uQ0iSlwLirzSnN8y7/DUAqgYz0SqykpTZJFGGPwfZ8gKBJ6IzdcrbbFtEjThAuNmGas
      +PcHU5RSpGnE1XbCO92Qt9Nwe1OURHhqpMm4l/Fuu8SYZ7i/mPHVSofftMqr6yffGF3kxcYo
      mWh+NDnHuW6JVxsjnCx3eD8q88zoPDU/ouwZPAXjQQpByrzx0ciWz2xDKYCLcZHn6mN8e2wJ
      8AmDMtrzsDYljiO01gRBcd2IezdYsfd7j+gKGK9ASUcATCUB/69eoY2f7+fcRsqe5VSlzXiQ
      cV9lGSOKVEHZF5SUkV7zPGP4V2ML/GZ5kopnua/YZdxLOVRKOJG1KXhtQp2bmVpC8mXKlIfL
      dV5YmKCjtvYeDKUAAGbTEKVAeYJSYG1KRgdRFpFwNb5+N0mSLlmW29FKKazyOFlaM4R/tVym
      vUP2JxwvdRgP8ghZRWuMirGAYf3ayXQc8u3Ra1RU/ntWfEvZjzGk1Hyb78cAlOjVrFzBIsrw
      xfEmy5nPW+0bZ+XNY2gFEFnNe+0ye/2EPWGMJSFTbQjBEpFJirZjd2VDjIhwsd7i7xfKHK9o
      alr4bbMAfpGKVox1LJcTn8Udssh1TxjxzdFlAN7rlEHgYEFRDSJGg5SiNhjRnCo0eGrXEig4
      VKrDdUEGTdBLR097hk6wIXv1dHUJQTHmx/y2Prkl30X16zGpv7s4z8+WPmeJPhG+MtLg66MN
      LAar1ha9PCkRyijaC7bcBxARXp1r82x3AsvO37EVKssuL5+prmUhCIz5GZNBzHcnprkclWln
      Po9UGyuFlkDyTq/p3TNRgCBK8CTMExMBQxejuohay89KrOK/X34Q423+jzK0MwAASvFRVKas
      Uk7VFm540WLJ1m7YJnP9uCMinCgbXohzu3+nk4jmWnZdzpGCbubx1HgbD+HeUvum7xOkJ4Sw
      NwOYvFQjHrq3F8PcmJaefzxlZWhuQXfdGXPqNjKfBRS12TDiWky+MWaLSNOYi8tNnp/JeHPe
      cKZTprtDTJw7IbOK/3ttN8ktqmooPDxCNEU8iqvFxzyK6wcZJWuzRo9ACY+PbU0l8OGeAXqE
      /sZhVzAbRqLNZjbV/K6b5/N4mr5JvV5FwBfhcKmLrw3aCPqG1StP8iK7AFqKdzSjTsdFXq3X
      tsQsdAIA/mFxkh9ORuwu5D5AYvOdAp5KEGtAe5vqB4gI1hqOFg1/Xkz5dd0jkv7q/FXJ+NJY
      E0+E3WGC78XsCqK1CwRUL81EoUDA41bV9tTam0T3HgsoSK3ijeYuki1a7XMCALrWJxLNH1oj
      XE7KRJnHE9VljpQsVgwemxsJUkr16nR2GaXL5WLAW93+uhUt5fNsfW2ltqwz/mb/BVRvP7XC
      39DhpbfzegWlvXWl2q01BDKCEoVREUZSXmpM8km8dWHQ/jU6NxMRlMBUUqKRFrnQray9tAV+
      wEqpcq01xqQ8U21s+t+423SMx5vrQpU3mJUKLGtRNqU99A0zq+4JwqQgRvNxa4x/aWxtOkR/
      DTtbhIdQTwMutar8h4MzdK2l6EUIfi9tenP32SZJRLfbolAo8UG3yIvt7cs32jSUYsEEWBQa
      6WXX5oNHXnfv9rNolqVEcYPpOKHrlfjn5gSyxX6REwBgleJMexcPVroUtODpOI9ECGyF5yVi
      e9WZS7y7WKY+IBPxuahIJopQyboRX4nGw8OSFyOwpGgJEeOjlN87ryCl3mnzfLPMRbuX9oqz
      vMWukRMAIEoxbwpUTD5te4QYyW+eZvP32Pp+iOf5WGt5uJpxqd6fpdhXEQix/HD3DKHaGDlb
      jfwowZA7yoYuBpBUkWUZSkJ+2RjhotzdTf1OANehbS4AJR4h+Y3QenN/oiSJSNOYMMyT7Xbp
      DtwyOtIfeAgFa/jZtd3Abip+xnf2zDLmJ3ATQVyP9jxm4iIvLhe4KNW7Hgl2AriOB3oFszxK
      aBWsdv7NDIGuJLutoHshwp2c+nA7jFI0rzs5siEBP547yIlCh6+Oz+KtRnnyXS4r+VX/Y2Yf
      oGlnikj0tiyDOAFcx9utKo9X2ggZiL96ouJmsZL+kG9v1FzsCM+3Kn3d+W9Fy/q83qkxbwMC
      EU6WWoxRRytFWAj5MCqxkOXrBMC2/QZOANcxmwWc6xS5rxzl+4UtoAS1SfsC8j2+lsAPQYRl
      o7iUDvAtUHA+ziNoH3YDsLW8/IwXINu8n2GFwQg/bBIicKZdJbEKQ3fT1gBWSpbnppSs7jV4
      tj48ZUyUF+RlW4Jwx3R+cAJYj1Kcj4tcTUJQQkbnc3+kMYY47mJMhu+HrMz1Z5oh3T5LfxhE
      nABuRCl+sTTBVBxuyEq8E4xJMSZ3fLvdvH5nB583uuFQH020U3ACuAlt6/GThUmuRZ9/L8D1
      O8pe647wejrO/1ocYT7bGVsbhx0ngFtQ0Io9oULEYu3m+AL7iprXWgXX+XcQTgC3oGUUP54b
      Y9FEWEk+9yZ5rTVHdJMRvXWbbBy3QUCJ5NGOnnXrBHALDIpLWYFXWhUy2hgbcyfbp7X2KBRK
      lEojeF7AQJ3G0WfUPMv3a12OF9bqvToBfEqsJFibfWYRaK3xvIAkiVedYcf2IAJNNB9GwerC
      mxPAbahnHlNxiCVDJLsjESRJlzSNKJWqqB1S12cYaYrm+UZxXa93ArgN5+MSLzRGe+sCXYx0
      +SxmTL79MfcfYqswzgLaXm6IPDsBfBaUxaoEKxvPDBAR4ri7YXYwJsNaSxgWeacpLGbuJ99J
      uLvxKbiUFPkvVw7zaiPfm5rJ+hViay3tziJx2rhlyFQrna8JuBlgRzHAmVibjIIzzSq7/ZRD
      xQxlW4goPB0QxQ0y6VAoFjF00DKymkK9svcXBS80CwOZ+dnPuBngM9DC528XJpk3GRFLLGYR
      kamDnxIWCoiyebRIslW7X0QIggIKRce63r/TcDPAZ0QJvFWvEfhV3mqP83hliROlBleaJZ7c
      tYRCk5o2JslLn2xHlWnHp8cJ4DMiGt6LavSK3/BWa5y322MohEOVLvvDFE/5FIsjvWONfLTW
      THXZ4jpzjjvBCeCzcuO+PUV+iokofrpwkJPFNt8ca2AlQesChdDj+fmAM3GAiHI+wA7D+QCb
      hcorzDWTAEOvJIhYlPZoGI+OaNf5dyBOAJvM2bTEPy7t4qV6hYwWmWk7P2AH40ygzUYp3utW
      QITRMF8TmHWx/x2LE8BW0dtZ5tjZOBPIMdQ4ATiGGmcCOYYTESRquxnAMaQohSpVnQAcQ0ov
      bd0JwDF0SBJh5q6AiPMBHMODiGCXZkk/eh2JuhRr33cCcAwP0q6TvPhT/EBhK5PgB84Ecgww
      KzWAVh4mMdokxNNX8I89CSZ1AnAMLrZdJ1uYzh+IYKc/Jk0zwq98H1UeITnznDOBHIOLroyi
      K6MAZNPnST58k+C+U9jZK8TXzkO76QTgGGCu27uhiiVUWERP7Cf5w2sEpRDaTWcCOYYDFRSg
      UMKbOEDhmR9hDaSJ8wEcQ4JtLKBLI6hSBYna2NpuGNnlBOAYErKE8JGvojwfb/9RdG0C7fvO
      B3AMB97h46A02fQ57MI0MnMemktuBnAMB8rz8zWBLMG/9xFsHFOolNwM4BgelOfhHzmBJF38
      B58gbS44ATiGEY10W9i5aWcCOYYLESE99zb23O/Re+5xM4Bj+PD2H0UefRqyzAnAMdiItRB3
      kMWr2Ctn0UcfRpVr+Afux8xN9bkARDaWKnQ4eog12CtnCS+9TTJ9geroCPXXLyMH78drL6EP
      n+pfH2CvHzHmu0PnHLdG2g3s28/ztT97ivu+8AitxFB99BHGju6jcvQwLN1kBli++jHvn51i
      pWv51Qkee+QE1cLOOtytFsacqjQ5EKRkEvBGu8aFqOrqbzpWkamzjNWKXDt3iasXpymefBSv
      lmeHqnIFE13bKICZT86Rjhzigb35hTooUvB35kTxRG0eULSygFPKUjcBS1lhu5vl2C5EEGvA
      ZBAUUJOHWb74Ps0XXkPfcy/hSA3TbOKN5Cf4hNrezAfwGN+9l4MH15f1a1w4w8XwBI8eKEHS
      4oWX3+X0M18mufoJVzpFdjPDc+8v851vfZ0wXeT1l17haiPjnoef5PSJI4Se4t3XniWhyLnz
      lynvO8bTX3qMkaLGxC3e+N1zXFhMOXziCzz18FEC/SmGcgUgnO3U+F19/3XPOYYRaS2TffAy
      oSSYsAppzD1HJoEJZmxIMnUZb2EWOXI/enQM5Xmf3geIG9eYa/ZORzQJly9PkwJxa5mP33mV
      534/w9e+9iWqqsVv/vF5Jh77Bj/6q+/iXXuLV9/Pd+VMffw+yegD/OBH/5bj4RTPvnkeY2Le
      /Kef0z38JX74g+9QnDnD658sf6az5A4U2nx9ZIZx7XyCYSY5+ybBlfd45l8/wRP3Vzn96F6O
      nLifB08/yl7pMmG7fOGbXyY7+z6tV14kLe3dDCdYGDl4kr/6i29zcLzC8swlvP0nOXlgFB1U
      eOwLT3D5wocAFMcmuffQXnztc9+XnmFk7iwzC0t8MNsgWDzH62++TUMCPnn/PW53FvVcUmI5
      DQHYV+zyxNhVfrD3E06UltkXdLntBzgGCxG8vUeJ/SoX3nqP8UP7Gdu3h1Ktiud7HP/KF3jk
      T79MZazG0z/6LpUD9+Dfd+rOwqDS+4M5Cs/zCXp+QqFQJI6WsYAHJFGXMCxu+AQbLdGRGpWi
      T6Eyxr79+8nd7P0cq4zf1pLZHXYxOll9rJRiJIj5s4lLdIzPbxcOcimtEsvOct4dW4Mg2KVr
      FGzE2J7JDa8rpVZP7vSDgNrYCHPtxs1mACGOIjqdTv4virFWKJQqLFybotlY4g9vvcb5mdZN
      G1KZOMBI6xKvfzhFa3mWM2+9xz33PghAFnVZWl6m1Vjk5WdfZfLUQ9QqNY5PhFxuKiYmJynY
      DtNzS3fwE6j8R1AZRT/ie3sucbDQuf3bHAOBUhr/yEmS4hhn33iX82++TXN+8dZv6LZAa5Tc
      cLT5/MV3eO2tc6th0GB0H1/70pOMhBnvvvw8l+rCkWMPYdotTjz+MNnCFLNxkXsPrDnNJmny
      9quvcKWecd+pL3LyngkU8Ov//d9olx9AK7j/0ad46J4JPKUQG/PuKy9wYb5NZeIwp08/Sq3o
      /9FZ4NrcJxg9vfpYEIS1E9wVPj+bO8r5aPSz/I6OPsfW54lf/jm7ayEPnHqA8YP7bnrd1Y8v
      8G60d6MAtpLnf/k/eeiZv2Zv5fN/1kYBWIS1U9pnujV+OncfiXIm0DAhJsP8/nm+8OAIhXKR
      8mgN7W00dKY/ucT78aY4wZ+e6sgY/qaFKfMxf+2RRaFReCg8xsOYI+Wbm2mOwSU7/y566n0+
      fvUMH71yhqjVvul1czMN1Ojuu5sLdPrp727aZ+Xd37JW31cAjeo9LnqWPxmb5aOuM4GGARHJ
      K73NX+LY6ZOM7ZmkMj6K1nr9NSI0ZhdYiH10ZbTPk+Gw62YBx/Aiy7NkL/89Qdxg3zf+kiAM
      173erreYvTjFwpVpluab6C//BUqp/hWAQqHwe3b/RhF0TcCzi/vvfsMc24Mf4is4fPw+sihe
      FUDc7tBcrPPhuQW6u4+hHj2N9jxUMXdE+1YAKxIQFLkAFCt5ELEJ+KfFw1yIq9vZQMddRBXK
      2NoE185dojG/wMPf+BpZknHh3Y+4piZQx55Gl6qrawGr77ubUaDNZF0USBQLaYl3W6N4Vpgx
      Va5EJY6XunwYlV1+0JBg56eJX/oZfnuB6v0P0Q1qyMHjeHsO3/I9fS0Aq2aYikb5l9YoH0fV
      VUvo8coyp0aW+en8QRpZ6AQwJOSOcIaYFBUU83PAbrNhqm9NoK4J+MelI0wlZWLpefoKxvyE
      p0ZnKHsZu72Yhgn/+Ac5BgalFPgByg8+9Xv6VgBXojLnomDd6K5F+GJ1lrKXYESTuaHfcRt2
      5k6XT8Oaz7vKEyOLnBhZBAXTcY2Lzgl23Ib+FcANjOiUE5UFAJT4/PPyHmf7O/4oMkinRO4O
      IyaCGIA3G5NYlKsa4bgpYjIkjZFOa3BmgFAyUHkY6Foc8ucTl3i6NrfNrXLsRCSNsXNX0NWx
      wZkBvjo+v/r/7+25BALX4j3b2CLHTkUXK+jDx4E+jgKtIsJjlWWqfrT+eQXf2n2Fb9pZXlza
      zWO1ZS51K3zQqTGfhc40cgCDIADAVxZ1k3yggjagunxr8jIAk2GTY5UlXmns4b3O2N1upmMH
      0t8CEOFkpcGD5eVbR3x6pVNWqHgZH3dG7kbrHH1AXzvBJW04VZljb/Hmmx5uxtWoiLXqZgmk
      jiGkrwUQKKHsm9tfeB0HSi3+44FP+HptDm2dCoadvhZA2UtRfDYBoGDR+LzW2oX9NNXnHANN
      3/oAe4KIfzM5TcWzKPHzihC36s+iUKxtjv99Y5Ik07n8nQaGmr4VgAYutWpYFBYQFFaZ1cUw
      8Li31KDmx0zHoxwqdPmoXeUXcwcQD74xMctzy3u38Rs4dgJ9ux/ghYvz/HzRR7jRn10b0ieC
      mEOFDp4IR8ttXmtMsDuIOVVdwopiOi7xbP3mdWMcw0HfzgAC2NssZi2kIW3j80R1iZ/M5buC
      Dhc7VLSh4FlCbaF+Fxrr2LH0tRN8O7SFw7rDK82J1fWAS50yLy7ntSNfqm+sIekYLvp2Bvg0
      WA0fZVVArVpGU2kJqzxeXd7L2c6Ic4KHnIEWwIZ8n97jq0mBq0nBdX7HgAvgVriO7+gx0D6A
      w3E7nAAcQ40TgGOocQJwDDVOAI6hxgnAMdQ4ATiGGicAx1DjBOAYeGxjiezqBSSN1z0vYod0
      JdgxFIgIdmmWxX/+JbFRlENNac8+VBAgAmmn7QTgGExMfYHo7RdJ56+RZZokqJEYS/vyFCiN
      KIVVgROAY/CQNGH5t39HwxQRbxxWj4jQpMH6Q6qdD+AYPLSmMDKCb+O8QPIfu/QuNcnhuGso
      zye45ziVtI6SP141xAnAMZCE9xzHq1Txsw7KpL1DsgGx180KfXxOsMPxx7DdFgXf408OaF7/
      4CpRWMNTigpdIkKWqJFmLgzqGFB0bZwj3/lLvr9vhmPHp8nSDIBjxw7xm998yI9fuogpjjsB
      OAYTpTReoUIYBJx46OB1x6VqPCw1FRFXyk4AjsFnpfOLCNeuLfDBVJNGcR/N+UUnAMfgIgiC
      RbCoXrznjTc+4my7QqXmUxoZoEPyHI6NCKIsggHyU+NLpQI2arLQycOjTgCOgWW1/L2yiBis
      0cSppVAqsbsSILh1AMegInCi3Fj3hMkMy40I6/koDUo5E8gxoCgR9hbWDk5cWmzx8dkZlhpd
      UHk+kFJuIcwxoDxQbjERruX/i9W8dOYyF7IxrjsqwplAjsFkVKd4K6F/0UxM1jjxwH58m627
      zgnAMZB8ZWzF/hc0AQrFk4/dRzlr90KiuTqcAByDh4V3WyN0jLca/0cUv3ruHerhxLpLnQAc
      g4eG5+oTPLu0dgSWYNk1VsTPOsh15wo5ATgGEwVtsz7Gs2/3CKW0zvWHajkBOAYW77pzoJeX
      2jz/+gUa5f3rrnECcAwshwqd1f/PztaZiYIbdoi5dQDHADNWgJl4hKnI46weZXSyQanbZrkT
      Y7wCSqn+PSb1dxfn+dlSsN3NcPQZkiYkb/yamWsNMh04E8gxXKggxD92mqLpkK8ROBxDhrdr
      L6Wj9xNkXecDOIYQpag8+mX8wHczgGM40YUiX//qKScAx3CiRLi/2HECcAwnRwoxBwqJE4Bj
      CBF4strAV24l2DGEBGKZDFLUWq6owzEkiPBEtUXVs4CrCuEYIgpY/nR8mQeKXZTK6wY5ATgG
      G4FQW44GKaerTQ6Vur1yWRYhdQJwDDYPlTs8UW5yqJgA9Dp/jChnAjkGnCcrEX86uoxS6w/J
      WOn84ATg2G7WzqrYVB4oJDxdW0IpgyXDkt70OicAx/ayyR0fAIHT1WU8nfZMnhTUDVn/SqG0
      E4BjALmnEHGg0MUQb+z4ACi01iBuR5hj0BDh3kKEVhZ7Q+dXaFCgVQAiGOuiQI4Bo+RZHiov
      Y0lWn9PaXy2GJWIxJiWOO4i4dQDHgKGxlIIOFoPnBYBePR/Amoyo28Zag9YaPwidAByDRSaa
      uThkV9gk6UYYk+H7AVp7KAkoFkv4lIH8yCSXC+QYKGKrudQtk6X52cBKaaw1WGvwfA+uK5Xo
      U3EzgGPwMEoRFoq5swtYm2GNJYsN5WB8tViuwsOv1+vb3Nw7Y9IzfGOkLyu6OLaY/UERlU2C
      0ohYNB5YC+JjshCr1wyf/w+YdD/YdtGUFAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      QmCC
    </thumbnail>
  </thumbnails>
</workbook>
